{"version":3,"file":"static/js/465.f42cf892.chunk.js","mappings":"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","sources":["CommonStyle/SectionTitle.styled.jsx","adminPage/StoreDB/ListProduct/ListProduct.styled.jsx","components/Call/Call.styled.jsx","components/Call/Call.jsx","components/GoogleAnalyticsWrapper/GoogleAnalyticsWrapper.jsx","components/ListGoods/ListTableProduct.styled.jsx","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","components/Сonsult/Сonsult.jsx","components/Сonsult/Сonsult.styled.jsx","pages/Store/Store.styled.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/StoreNav/StoreNav.styled.jsx","components/StoreNav/StoreNav.jsx","components/ListGoods/ListGoods.jsx","pages/Store/Store.jsx","services/numbersFormatCost.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SectionTitle = styled.h2`\n  color: ${({ theme, colorText }) =>\n    theme.color[colorText ? colorText : 'main']};\n  text-transform: uppercase;\n  line-height: 1.3;\n  font-size: 30px;\n  text-align: ${({ text }) => (text ? text : 'center')};\n  margin-bottom: ${({ marginBottom }) => (marginBottom ? marginBottom : '0')};\n\n  @media screen and (max-width: 999px) {\n    font-size: 25px;\n  }\n`;\n\nexport const SectionSubtitle = styled.p`\n  color: ${({ theme, colorText }) =>\n    theme.color[colorText ? colorText : 'g500']};\n  font-size: 16px;\n  text-align: ${({ text }) => (text ? text : 'center')};\n  margin-top: 10px;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: ${({ maxWidth }) => (maxWidth ? maxWidth : 'initial')};\n`;\n","import styled from 'styled-components';\n\nexport const Inner = styled.div``;\n","import styled, { keyframes } from 'styled-components';\n\nconst callAnim = keyframes`\n    0% {\n        transform: rotate(0);\n    }\n    10% {\n        transform: rotate(30deg);\n    }\n    20% {\n        transform: rotate(0);\n\n    }\n    100% {\n        transform: rotate(0);\n\n    }\n`;\n\nexport const CallBox = styled.div`\n  position: fixed;\n  z-index: 20;\n  bottom: 100px;\n  right: 15px;\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.color.second};\n  box-shadow: rgba(0, 0, 0, 0.24) 0 3px 8px;\n  cursor: pointer;\n  width: 60px;\n  height: 60px;\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  transition: transform 350ms ease;\n\n  @media screen and (max-width: 767px) {\n    width: 50px;\n    height: 50px;\n  }\n\n  svg {\n    width: 35px;\n    height: 35px;\n    stroke: ${({ theme }) => theme.color.white};\n    fill: transparent;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    animation-name: ${callAnim};\n    animation-duration: 3.5s;\n    animation-iteration-count: infinite;\n    animation-timing-function: ease;\n\n    @media screen and (max-width: 767px) {\n      width: 25px;\n      height: 25px;\n    }\n  }\n\n  :hover {\n    transform: scale(1.1);\n  }\n`;\n","import { Icon } from 'components/Icon/Icon';\nimport { CallBox } from './Call.styled';\nimport { useShowModal } from 'globalState/globalState';\n\nexport const Call = () => {\n  const { toggleModal } = useShowModal();\n  return (\n    <CallBox onClick={() => toggleModal(true)}>\n      <Icon name=\"icon-call\" viewBox=\"0 0 24 24\" />\n    </CallBox>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst GoogleAnalyticsWrapper = ({ children }) => {\n  const location = useLocation();\n\n  useEffect(() => {\n    if (process.env.NODE_ENV === 'development') return;\n\n    // Отправка события отслеживания страницы Google Analytics при каждом переходе на новую страницу\n    window.gtag('config', 'G-XFN527HLQ5', {\n      page_path: location.pathname,\n    });\n  }, [location]);\n\n  return <>{children}</>;\n};\n\nexport default GoogleAnalyticsWrapper;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const ListProduts = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n\n  @media screen and (max-width: 767px) {\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    margin-top: 15px;\n  }\n`;\n\nexport const TitleProduts = styled.p`\n  margin-bottom: 20px;\n  padding: 0 10px;\n  color: ${({ theme }) => theme.color.g2};\n  transition: color 350ms ease;\n  margin-top: 15px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 1000px) {\n    font-size: 16px;\n  }\n`;\n\nexport const ItemProduts = styled.li`\n  position: relative;\n\n  overflow: hidden;\n  cursor: pointer;\n\n  :hover ${TitleProduts} {\n    color: ${({ theme }) => theme.color.second};\n  }\n\n  @media screen and (max-width: 767px) {\n    max-width: 280px;\n    margin-bottom: 15px;\n    align-items: center;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin: calc(20px / 2);\n    flex-basis: calc(100% / ${({ flex }) => flex[0]} - 20px);\n  }\n\n  @media screen and (min-width: 1000px) {\n    margin: calc(30px / 2);\n    flex-basis: calc(100% / ${({ flex }) => flex[1]} - 30px);\n  }\n\n  @media screen and (min-width: 1200px) {\n    margin: calc(30px / 2);\n    flex-basis: calc(100% / ${({ flex }) => flex[2]} - 30px);\n  }\n`;\n\nexport const ItemProdutsLink = styled(NavLink)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  height: 100%;\n`;\n\nexport const WrapperImgProducts = styled.div`\n  width: 100%;\n  height: 320px;\n  overflow-y: hidden;\n  display: flex;\n  align-items: center;\n  border-radius: 10px;\n`;\n\nexport const ImgProduts = styled.img`\n  width: 100%;\n`;\n\nexport const PowerSpan = styled.span`\n  font-size: 14px;\n  width: 80px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 25px;\n  margin: 15px auto 0 auto;\n  background-color: ${({ theme }) => theme.color.second};\n  color: ${({ theme }) => theme.color.white};\n\n  @media screen and (max-width: 1199px) and (min-width: 767px) {\n    font-size: 12px;\n    width: 70px;\n    height: 25px;\n  }\n`;\n\nexport const CostProduts = styled.button`\n  color: ${({ theme }) => theme.color.g2};\n  padding: 7px 20px;\n  margin-bottom: 15px;\n  margin-top: auto;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: transparent;\n  font-size: 18px;\n\n  svg {\n    width: 20px;\n    height: 20px;\n    margin-right: 7px;\n    fill: ${({ theme }) => theme.color.second};\n    transition: stroke 350ms ease;\n  }\n`;\n\nexport const BoxBtnProducts = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  padding: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ButtonProducts = styled.button`\n  width: 35px;\n  height: 35px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: 10px;\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.color.additional};\n  cursor: pointer;\n  box-shadow: rgba(0, 0, 0, 0.24) 0 3px 8px;\n  transition: background-color 350ms ease;\n\n  :hover {\n    background-color: ${({ theme }) => theme.color.main};\n  }\n\n  svg {\n    width: 30px;\n    height: 30px;\n    fill: ${({ theme }) => theme.color.white};\n    stroke: ${({ theme }) => theme.color.white};\n  }\n`;\n\nexport const NotFoundText = styled.div`\n  width: 100%;\n  height: 150px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 18px;\n`;\n","import styled from 'styled-components';\nimport ReactPaginate from 'react-paginate';\n\nexport const ReactPaginateStyled = styled(ReactPaginate)`\n  margin-left: auto;\n  margin-right: auto;\n  align-items: center;\n  justify-content: center;\n  display: inline-flex;\n  flex-direction: row;\n  height: 52px;\n  gap: 7px;\n  padding-left: 12px;\n  padding-right: 12px;\n  box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n  border-radius: 45px;\n\n  .paginationLink {\n    display: flex;\n    width: 35px;\n    height: 35px;\n    border-radius: 50%;\n    align-items: center;\n    justify-content: center;\n    background-color: ${({ theme }) => theme.color.white};\n    cursor: pointer;\n    font-size: 16px;\n    line-height: 0.94;\n    color: ${({ theme }) => theme.color.main};\n    transition-property: background-color, color;\n    transition-duration: 350ms;\n    transition-timing-function: ease;\n\n    &:hover {\n      background-color: ${({ theme }) => theme.color.main};\n      color: ${({ theme }) => theme.color.white};\n    }\n  }\n\n  .paginationActiveLink {\n    display: flex;\n    width: 35px;\n    height: 35px;\n    border-radius: 50%;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n    font-size: 16px;\n    line-height: 1;\n    color: ${({ theme }) => theme.color.white};\n    background-color: ${({ theme }) => theme.color.second};\n\n    :hover {\n      background-color: ${({ theme }) => theme.color.second};\n    }\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 30px;\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  width: 100%;\n  height: 100%;\n  background-color: ${({ theme }) => theme.color.g200};\n  border-radius: 50%;\n\n  svg {\n    width: 25px;\n    height: 25px;\n    stroke: ${({ theme }) => theme.color.main};\n  }\n\n  :hover {\n    background-color: transparent;\n\n    svg {\n      stroke: ${({ theme }) => theme.color.white};\n    }\n  }\n`;\n","import { useSearchParams } from 'react-router-dom';\nimport { BtnWrapper, Wrapper, ReactPaginateStyled } from './Pagination.styled';\nimport { Icon } from '../Icon/Icon';\n\nconst Pagination = ({ count, limit }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const page = searchParams.get('page');\n\n  const checkCount = () => {\n    if (count && limit && Number(count) > Number(limit)) {\n      return Number(count) / Number(limit);\n    }\n    if (count && Number(count) > 12) {\n      return Number(count) / 12;\n    }\n    return 1;\n  };\n\n  const checkPage = () => {\n    if (page > 1) {\n      return page - 1;\n    }\n    return 0;\n  };\n\n  const handlePageChange = selectedPage => {\n    const newPage = Number(selectedPage.selected) + 1;\n\n    setSearchParams(prevSearchParams => {\n      const newSearchParams = new URLSearchParams(prevSearchParams);\n      newSearchParams.set('page', String(newPage));\n      return newSearchParams;\n    });\n\n    window.scrollTo(0, 80);\n  };\n\n  const rightArrow = (\n    <BtnWrapper style={{ transform: 'rotate(180deg)' }}>\n      <Icon name={'icon-arrow'} />\n    </BtnWrapper>\n  );\n\n  const leftArrow = (\n    <BtnWrapper>\n      <Icon name={'icon-arrow'} />\n    </BtnWrapper>\n  );\n\n  return (\n    <Wrapper>\n      <ReactPaginateStyled\n        pageCount={Math.ceil(checkCount())}\n        previousLabel={leftArrow}\n        nextLabel={rightArrow}\n        breakLabel={''}\n        containerClassName={'pagination'}\n        previousLinkClassName={'paginationLink'}\n        nextLinkClassName={'paginationLink'}\n        pageLinkClassName={'paginationLink'}\n        activeLinkClassName={'paginationActiveLink'}\n        disableInitialCallback={true}\n        forcePage={checkPage()}\n        onPageChange={handlePageChange}\n        marginPagesDisplayed={0}\n        pageRangeDisplayed={4}\n      />\n    </Wrapper>\n  );\n};\n\nexport default Pagination;\n","import {\n  ArrowConsult,\n  ImgConsult,\n  InnerConsult,\n  WrapperFlex,\n  WrapperImgPos,\n  WrapperOverHidden,\n  WrapperText,\n} from './Сonsult.styled';\nimport { Icon } from '../Icon/Icon';\nimport consult_img from '../../img/consult/consult.webp';\nimport { SectionTitle } from '../../CommonStyle/SectionTitle.styled';\nimport { ButtonOrg } from '../../CommonStyle/ButtonCommon.styled';\nimport { useShowModal } from '../../globalState/globalState';\nimport { Container } from '../../pages/Common.styled';\nimport { useLocation } from 'react-router-dom';\n\nexport const Consult = ({ widthScreen }) => {\n  const { toggleModal } = useShowModal();\n\n  const location = useLocation();\n  const currentPath = location.pathname.split('/');\n  const lang = currentPath[currentPath.length - 1];\n\n  return (\n    <InnerConsult>\n      <ArrowConsult>\n        <Icon name={'icon-arrow-consult'} />\n      </ArrowConsult>\n      <WrapperOverHidden>\n        <Container>\n          <WrapperFlex>\n            <WrapperImgPos>\n              <ImgConsult\n                src={consult_img}\n                alt={'Встановлення панелей'}\n                width={'715'}\n                height={'710'}\n                loading=\"lazy\"\n              />\n            </WrapperImgPos>\n            <WrapperText>\n              <SectionTitle\n                marginBottom={'30px'}\n                text={widthScreen < 768 ? 'center' : 'left'}\n                colorText={'white'}\n              >\n                {lang === 'ru' ? 'Подберем лучший' : 'Підберемо найкращий'}\n                {widthScreen >= 768 && <br />}{' '}\n                {lang === 'ru' ? 'вариант для вас' : 'варіант для вас'}\n              </SectionTitle>\n              <ButtonOrg\n                type={'button'}\n                colorBgHover={'secondBlur'}\n                onClick={() => toggleModal(true)}\n              >\n                <Icon name={'icon-annotation'} />{' '}\n                {lang === 'ru'\n                  ? 'Заказать консультацию'\n                  : 'Замовити консультацію'}\n              </ButtonOrg>\n            </WrapperText>\n          </WrapperFlex>\n        </Container>\n      </WrapperOverHidden>\n    </InnerConsult>\n  );\n};\n","import styled from 'styled-components';\n\nexport const InnerConsult = styled.div`\n  width: 100%;\n  position: relative;\n  margin-top: 70px;\n`;\n\nexport const WrapperOverHidden = styled.div`\n  padding: 100px 0;\n  overflow: hidden;\n\n  @media screen and (max-width: 767px) {\n    padding: 50px 0;\n  }\n`;\n\nexport const WrapperText = styled.div`\n  width: 53%;\n\n  @media screen and (max-width: 767px) {\n    width: 100%;\n    text-align: center;\n\n    button {\n      margin: 0 auto;\n    }\n  }\n`;\n\nexport const WrapperImgPos = styled.div`\n  width: 47%;\n  position: relative;\n\n  @media screen and (max-width: 767px) {\n    width: 100%;\n    height: 250px;\n  }\n`;\n\nexport const WrapperFlex = styled.div`\n  display: flex;\n\n  @media screen and (max-width: 767px) {\n    flex-direction: column;\n  }\n`;\n\nexport const ArrowConsult = styled.div`\n  width: 50px;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: -25px;\n  left: 50%;\n  transform: translateX(-50%);\n  z-index: 20;\n\n  svg {\n    width: 50px;\n    height: 50px;\n  }\n`;\n\nexport const ImgConsult = styled.img`\n  position: absolute;\n  top: -200px;\n  left: -80px;\n  width: 580px;\n\n  @media screen and (max-width: 1200px) {\n    top: -150px;\n    left: -200px;\n  }\n\n  @media screen and (max-width: 999px) {\n    left: -300px;\n  }\n\n  @media screen and (max-width: 767px) {\n    width: 450px;\n    left: 50%;\n    top: -230px;\n    transform: translateX(-50%);\n  }\n`;\n\nexport const ConsultText = styled.p`\n  font-size: 18px;\n  color: ${({ theme }) => theme.color.white};\n  line-height: 1.5;\n  margin-bottom: 30px;\n\n  @media screen and (max-width: 999px) {\n  }\n\n  @media screen and (max-width: 767px) {\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Inner = styled.div`\n  margin-top: 90px;\n  display: flex;\n  position: relative;\n  align-items: start;\n  min-height: calc(100vh - 300px);\n\n  @media screen and (max-width: 999px) {\n    margin-top: 80px;\n  }\n  @media screen and (max-width: 767px) {\n    margin-top: 70px;\n  }\n`;\n\nexport const WrapperStore = styled.div`\n  flex: 1;\n  margin-bottom: 15px;\n`;\n\nexport const WrapperFilter = styled.div`\n  transition-property: visibility, width, left;\n  transition-duration: 350ms;\n  transition-timing-function: ease;\n  padding: 20px 15px;\n  background: radial-gradient(\n    186.93% 102.34% at 81.46% 7.95%,\n    #fff8de 0%,\n    #dceeff 100%\n  );\n  border-radius: 10px;\n  box-shadow: rgba(99, 99, 99, 0.2) 0 2px 8px 0;\n\n  @media screen and (min-width: 1000px) {\n    margin-top: 80px;\n    width: ${({ isShow }) => (isShow ? '220px' : '0px')};\n    overflow: ${({ isShow }) => (isShow ? 'initial' : 'hidden')};\n    visibility: ${({ isShow }) => (isShow ? 'visible' : 'hidden')};\n  }\n\n  @media screen and (max-width: 999px) {\n    position: fixed;\n    left: ${({ isShowFilter }) => (!isShowFilter ? '-220px' : '15px')};\n    width: 220px;\n    bottom: 0;\n    z-index: 50;\n    border-bottom-right-radius: 0;\n    border-bottom-left-radius: 0;\n    height: calc(100% - 90px);\n  }\n\n  @media screen and (max-width: 767px) {\n    height: calc(100% - 90px);\n  }\n`;\n\nexport const FilterToggle = styled.button`\n  position: absolute;\n  top: 70px;\n  right: -35px;\n  cursor: pointer;\n  display: none;\n  width: 35px;\n  height: 60px;\n  padding: 0;\n  border-bottom-right-radius: 10px;\n  border-top-right-radius: 10px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0 3px 8px;\n  background-color: ${({ theme }) => theme.color.second};\n  justify-content: center;\n  align-items: center;\n\n  svg {\n    width: 25px;\n    height: 25px;\n    fill: ${({ theme, isShowFilter }) =>\n      isShowFilter ? theme.color.white : 'none'};\n    stroke: ${({ theme, isShowFilter }) =>\n      !isShowFilter ? theme.color.white : 'none'};\n  }\n\n  @media screen and (max-width: 999px) {\n    display: flex;\n  }\n`;\n\nexport const BackDropFilter = styled.div`\n  width: 100%;\n  height: 100vh;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.25);\n  z-index: 40;\n  position: fixed;\n  display: ${({ isShowFilter }) => (isShowFilter ? 'block' : 'none')};\n`;\n","import styled from 'styled-components';\n\nexport const WrapperFilter = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n\n  @media screen and (max-width: 999px) {\n    overflow-y: scroll;\n\n    ::-webkit-scrollbar {\n      width: 0;\n    }\n  }\n`;\n\nexport const ListFilter = styled.ul`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n`;\n\nexport const ItemFilter = styled.li`\n  margin-bottom: 15px;\n`;\n\nexport const TitleFilter = styled.h5`\n  font-size: 18px;\n  color: ${({ theme }) => theme.color.g2};\n  margin-bottom: 10px;\n`;\n\nexport const ListCheckBox = styled.ul`\n  width: 190px;\n  transition: opacity 250ms ease 350ms;\n  opacity: ${({ isShow }) => (isShow ? '1' : '0')};\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 5px;\n`;\n\nexport const ItemCheckBox = styled.li`\n  margin-bottom: 5px;\n  width: 100%;\n`;\n\nexport const LabelCheckBox = styled.label`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n`;\n\nexport const InputCheckBox = styled.input`\n  display: none;\n`;\n\nexport const TextCheckBox = styled.p`\n  font-size: 16px;\n  color: ${({ theme }) => theme.color.g2};\n  flex: 1;\n\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n`;\n\nexport const CustomCheckBox = styled.span`\n  width: 18px;\n  height: 18px;\n  display: block;\n  background-color: transparent;\n  border: 2px solid ${({ theme }) => theme.color.second};\n  border-radius: 4px;\n  margin-right: 7px;\n  position: relative;\n\n  :before {\n    content: '';\n    width: 10px;\n    height: 10px;\n    border-radius: 2px;\n    background-color: ${({ theme }) => theme.color.second};\n    opacity: 0;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    transition: opacity 350ms ease;\n  }\n\n  ${InputCheckBox}:checked + &:before {\n    opacity: 1;\n  }\n`;\n\nexport const FilterForm = styled.form`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const CountInfo = styled.div`\n  font-size: 14px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: ${({ theme }) => theme.color.g2};\n`;\n\nexport const ResetFilter = styled.button`\n  width: 150px;\n  height: 30px;\n  margin-top: 5px;\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  border-radius: 30px;\n  font-size: 14px;\n  background-color: ${({ theme }) => theme.color.main};\n  color: ${({ theme }) => theme.color.white};\n  cursor: pointer;\n  transition: background-color 350ms ease;\n\n  :hover {\n    background-color: ${({ theme }) => theme.color.second};\n  }\n`;\n","import {\n  CountInfo,\n  CustomCheckBox,\n  FilterForm,\n  InputCheckBox,\n  ItemCheckBox,\n  ItemFilter,\n  LabelCheckBox,\n  ListCheckBox,\n  ListFilter,\n  ResetFilter,\n  TextCheckBox,\n  TitleFilter,\n  WrapperFilter,\n} from './Filter.styled';\nimport { LoadSpiner } from '../LoadSpiner/LoadSpiner';\nimport { useRef } from 'react';\n\nexport const Filter = ({\n  filterList,\n  isShow,\n  handleCheckboxChange,\n  count,\n  isLoading,\n  setCheck,\n  initialFilter,\n  subtypeParams,\n}) => {\n  const formRef = useRef(null);\n\n  const handleResetForm = () => {\n    if (formRef.current) {\n      formRef.current.reset();\n      setCheck(initialFilter);\n    }\n  };\n\n  return (\n    <WrapperFilter>\n      <FilterForm ref={formRef}>\n        <ListFilter>\n          {filterList.sortSubtype && filterList.sortSubtype.length > 0 && (\n            <ItemFilter>\n              <TitleFilter>Тип:</TitleFilter>\n              <ListCheckBox isShow={isShow}>\n                {filterList.sortSubtype.map(item => (\n                  <ItemCheckBox key={item}>\n                    <LabelCheckBox>\n                      <InputCheckBox\n                        type={'checkbox'}\n                        value={item}\n                        onChange={e => handleCheckboxChange(e, 'subtype')}\n                        disabled={isLoading}\n                      />\n                      <CustomCheckBox></CustomCheckBox>\n                      <TextCheckBox>{item}</TextCheckBox>\n                    </LabelCheckBox>\n                  </ItemCheckBox>\n                ))}\n              </ListCheckBox>\n            </ItemFilter>\n          )}\n          {filterList.sortCountry && filterList.sortCountry.length > 0 && (\n            <ItemFilter>\n              <TitleFilter>Країна виробник:</TitleFilter>\n              <ListCheckBox isShow={isShow}>\n                {filterList.sortCountry.map(item => (\n                  <ItemCheckBox key={item}>\n                    <LabelCheckBox>\n                      <InputCheckBox\n                        type={'checkbox'}\n                        value={item}\n                        onClick={e => handleCheckboxChange(e, 'country')}\n                        disabled={isLoading}\n                      />\n                      <CustomCheckBox></CustomCheckBox>\n                      <TextCheckBox>{item}</TextCheckBox>\n                    </LabelCheckBox>\n                  </ItemCheckBox>\n                ))}\n              </ListCheckBox>\n            </ItemFilter>\n          )}\n          {filterList.sortBrand && filterList.sortBrand.length > 0 && (\n            <ItemFilter>\n              <TitleFilter>Бренд:</TitleFilter>\n              <ListCheckBox isShow={isShow}>\n                {filterList.sortBrand.map(item => (\n                  <ItemCheckBox key={item}>\n                    <LabelCheckBox>\n                      <InputCheckBox\n                        type={'checkbox'}\n                        value={item}\n                        onClick={e => handleCheckboxChange(e, 'brand')}\n                        disabled={isLoading}\n                      />\n                      <CustomCheckBox></CustomCheckBox>\n                      <TextCheckBox>{item}</TextCheckBox>\n                    </LabelCheckBox>\n                  </ItemCheckBox>\n                ))}\n              </ListCheckBox>\n            </ItemFilter>\n          )}\n          {filterList.sortPhases && filterList.sortPhases.length > 0 && (\n            <ItemFilter>\n              <TitleFilter>Кількість фаз:</TitleFilter>\n              <ListCheckBox isShow={isShow}>\n                {filterList.sortPhases.map(item => (\n                  <ItemCheckBox key={item}>\n                    <LabelCheckBox>\n                      <InputCheckBox\n                        type={'checkbox'}\n                        value={item}\n                        onClick={e => handleCheckboxChange(e, 'phases')}\n                        disabled={isLoading}\n                      />\n                      <CustomCheckBox></CustomCheckBox>\n                      <TextCheckBox>{item}</TextCheckBox>\n                    </LabelCheckBox>\n                  </ItemCheckBox>\n                ))}\n              </ListCheckBox>\n            </ItemFilter>\n          )}\n          {filterList.sortPower && filterList.sortPower.length > 0 && (\n            <ItemFilter>\n              <TitleFilter>Потужність:</TitleFilter>\n              <ListCheckBox isShow={isShow}>\n                {filterList.sortPower.map(item => (\n                  <ItemCheckBox key={item}>\n                    <LabelCheckBox>\n                      <InputCheckBox\n                        type={'checkbox'}\n                        value={item}\n                        onClick={e => handleCheckboxChange(e, 'power')}\n                        disabled={isLoading}\n                      />\n                      <CustomCheckBox></CustomCheckBox>\n                      <TextCheckBox>\n                        {item.split('-')[0]}-\n                        {subtypeParams === 'Панелі' ? 'Вт' : 'кВт'}\n                      </TextCheckBox>\n                    </LabelCheckBox>\n                  </ItemCheckBox>\n                ))}\n              </ListCheckBox>\n            </ItemFilter>\n          )}\n          {filterList.sortReservoir && filterList.sortReservoir.length > 0 && (\n            <ItemFilter>\n              <TitleFilter>Ємність:</TitleFilter>\n              <ListCheckBox isShow={isShow}>\n                {filterList.sortReservoir.map(item => (\n                  <ItemCheckBox key={item}>\n                    <LabelCheckBox>\n                      <InputCheckBox\n                        type={'checkbox'}\n                        value={item}\n                        onClick={e => handleCheckboxChange(e, 'reservoir')}\n                        disabled={isLoading}\n                      />\n                      <CustomCheckBox></CustomCheckBox>\n                      <TextCheckBox>{item.split('-')[0]}-Аг</TextCheckBox>\n                    </LabelCheckBox>\n                  </ItemCheckBox>\n                ))}\n              </ListCheckBox>\n            </ItemFilter>\n          )}\n          {filterList.sortVoltage && filterList.sortVoltage.length > 0 && (\n            <ItemFilter>\n              <TitleFilter>Потужність:</TitleFilter>\n              <ListCheckBox isShow={isShow}>\n                {filterList.sortVoltage.map(item => (\n                  <ItemCheckBox key={item}>\n                    <LabelCheckBox>\n                      <InputCheckBox\n                        type={'checkbox'}\n                        value={item}\n                        onClick={e => handleCheckboxChange(e, 'voltage')}\n                        disabled={isLoading}\n                      />\n                      <CustomCheckBox></CustomCheckBox>\n                      <TextCheckBox>{item}-B</TextCheckBox>\n                    </LabelCheckBox>\n                  </ItemCheckBox>\n                ))}\n              </ListCheckBox>\n            </ItemFilter>\n          )}\n          {filterList.sortMaterial && filterList.sortMaterial.length > 0 && (\n            <ItemFilter>\n              <TitleFilter>Матеріал:</TitleFilter>\n              <ListCheckBox isShow={isShow}>\n                {filterList.sortMaterial.map(item => (\n                  <ItemCheckBox key={item}>\n                    <LabelCheckBox>\n                      <InputCheckBox\n                        type={'checkbox'}\n                        value={item}\n                        onClick={e => handleCheckboxChange(e, 'material')}\n                        disabled={isLoading}\n                      />\n                      <CustomCheckBox></CustomCheckBox>\n                      <TextCheckBox>{item}</TextCheckBox>\n                    </LabelCheckBox>\n                  </ItemCheckBox>\n                ))}\n              </ListCheckBox>\n            </ItemFilter>\n          )}\n        </ListFilter>\n        <CountInfo>\n          {!isLoading ? (\n            `Знайдено (${count})`\n          ) : (\n            <LoadSpiner barColor={'#fff'} borderColor={'#fff'} />\n          )}\n          <ResetFilter\n            type={'button'}\n            disabled={isLoading}\n            onClick={handleResetForm}\n          >\n            Очистити\n          </ResetFilter>\n        </CountInfo>\n      </FilterForm>\n    </WrapperFilter>\n  );\n};\n","import styled from 'styled-components';\nimport Select from 'react-select';\n\nexport const InnerNav = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 15px 0 15px 10px;\n`;\n\nexport const WrapperTab = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-around;\n  margin-bottom: 15px;\n\n  @media screen and (max-width: 767px) {\n    justify-content: space-between;\n  }\n`;\n\nexport const WrapperSort = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  background-color: ${({ theme }) => theme.color.main};\n  padding: 10px;\n  border-radius: 10px;\n\n  @media screen and (max-width: 767px) {\n    flex-direction: column;\n  }\n`;\n\nexport const SortLabelWrap = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 16px;\n  color: ${({ theme }) => theme.color.white};\n\n  @media screen and (max-width: 767px) {\n    flex-direction: column;\n\n    :not(:last-child) {\n      margin-bottom: 15px;\n    }\n  }\n`;\n\nexport const ButtonTab = styled.button`\n  font-family: inherit;\n  font-weight: ${({ active }) => (active ? '700' : '500')};\n  height: 40px;\n  display: flex;\n  font-size: 18px;\n  justify-content: center;\n  align-items: center;\n  max-width: 250px;\n  width: 100%;\n  margin: 5px 30px;\n  cursor: pointer;\n  color: ${({ theme, active }) =>\n    active ? theme.color.white : theme.color.main};\n\n  border: 2px solid\n    ${({ theme, active }) => (active ? theme.color.second : theme.color.main)};\n  background-color: ${({ theme, active }) =>\n    active ? theme.color.second : 'transparent'};\n  border-radius: 50px;\n\n  transition-duration: 350ms;\n  transition-timing-function: ease;\n  transition-property: color, background-color, border-color;\n\n  :hover {\n    color: ${({ theme }) => theme.color.white};\n    background-color: ${({ theme, active }) =>\n      active ? theme.color.second : theme.color.main};\n  }\n\n  @media screen and (max-width: 767px) {\n    margin: 5px;\n    font-size: 15px;\n  }\n`;\n\nexport const SelectCustom = styled(Select)`\n  display: block;\n  text-align: center;\n  margin-left: 10px;\n\n  @media screen and (max-width: 767px) {\n    margin-top: 5px;\n  }\n\n  .react-select__control {\n    border-radius: 10px;\n    outline: transparent;\n    border: none;\n    background-color: ${({ theme }) => theme.color.white};\n    cursor: pointer;\n    box-shadow: none;\n    width: 260px;\n\n    @media screen and (max-width: 999px) {\n      width: 250px;\n    }\n\n    @media screen and (max-width: 767px) {\n      width: 240px;\n    }\n  }\n\n  .react-select__control-is-focused {\n    border: none;\n  }\n\n  .react-select__single-value {\n    color: ${({ theme }) => theme.color.g2};\n  }\n\n  .react-select__indicators {\n    svg {\n      fill: ${({ theme }) => theme.color.g2};\n    }\n  }\n\n  .react-select__input-container {\n    color: ${({ theme }) => theme.color.white};\n    caret-color: transparent;\n  }\n\n  .react-select__indicator-separator {\n    background-color: ${({ theme }) => theme.color.white};\n  }\n\n  .react-select__option {\n    border-radius: 10px;\n    cursor: pointer;\n    color: ${({ theme }) => theme.color.g500};\n    transition-property: color, background-color;\n    transition-timing-function: ease;\n    transition-duration: 350ms;\n\n    :not(:last-child) {\n      margin-bottom: 5px;\n    }\n  }\n\n  .react-select__option--is-focused {\n    background-color: ${({ theme }) => theme.color.main};\n    color: ${({ theme }) => theme.color.white};\n  }\n\n  .react-select__option--is-selected {\n    background-color: ${({ theme }) => theme.color.second};\n    color: ${({ theme }) => theme.color.white};\n  }\n\n  .react-select__menu {\n    border-radius: 10px;\n    padding: 5px;\n  }\n`;\n","import { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport {\n  ButtonTab,\n  InnerNav,\n  SelectCustom,\n  SortLabelWrap,\n  WrapperSort,\n  WrapperTab,\n} from './StoreNav.styled';\n\nconst subtypeSolution = [\n  { value: 'Зелений тариф', label: 'Зелений тариф' },\n  { value: 'Автономні станції', label: 'Автономні станції' },\n  { value: 'Резервне живлення', label: 'Резервне живлення' },\n  {\n    value: 'Гібридні безперебійні системи',\n    label: 'Гібридні безперебійні системи',\n  },\n  { value: 'Для підприємств', label: 'Для підприємств' },\n];\n\nconst subtypeGoods = [\n  { value: 'Панелі', label: 'Панелі' },\n  { value: 'Інвертори', label: 'Інвертори' },\n  { value: 'Акумулятори', label: 'Акумулятори' },\n  { value: 'Кріплення', label: 'Кріплення' },\n  { value: 'Комлпектуючі', label: 'Комлпектуючі' },\n  { value: 'Зарядні станції', label: 'Зарядні станції' },\n];\n\nexport const StoreNav = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const typeParams = searchParams.get('type');\n  const subtypeParams = searchParams.get('subtype');\n  const sortParams = searchParams.get('sort');\n\n  const [type, setType] = useState(typeParams);\n\n  const [subtype, setSubtype] = useState(\n    subtypeParams || (type === 'Готові рішення' ? 'Зелений тариф' : 'Панелі')\n  );\n  const [sort, setSort] = useState(sortParams || 'none');\n\n  const optionSort = subtype => {\n    let sortList = [\n      { value: 'none', label: 'За замовчуванням' },\n      { value: 'cost-up', label: 'Від дешевих' },\n      { value: 'cost-down', label: 'Від дорогих' },\n    ];\n\n    if (\n      [\n        'Зелений тариф',\n        'Автономні станції',\n        'Резервне живлення',\n        'Гібридні безперебійні системи',\n        'Для підприємств',\n      ].includes(subtype)\n    ) {\n      const addList = [\n        { value: 'power-up', label: 'Від менш потужних' },\n        { value: 'power-down', label: 'Від більш потужних' },\n      ];\n      sortList = [...sortList, ...addList];\n    }\n\n    if (['Панелі', 'Інвертори'].includes(subtype)) {\n      const addList = [\n        { value: 'c-power-up', label: 'Від менш потужних' },\n        { value: 'c-power-down', label: 'Від більш потужних' },\n      ];\n      sortList = [...sortList, ...addList];\n    }\n\n    if (['Акумулятори'].includes(subtype)) {\n      const addList = [\n        { value: 'с-voltage-up', label: 'Від менш потужних' },\n        { value: 'с-voltage-down', label: 'Від більш потужних' },\n        { value: 'с-reservoir-up', label: 'Від менш ємких' },\n        { value: 'с-reservoir-down', label: 'Від більш ємких' },\n      ];\n      sortList = [...sortList, ...addList];\n    }\n\n    return sortList;\n  };\n\n  const sortLabel = optionSort(subtype).find(i => i.value === sort).label;\n\n  const handleType = e => {\n    const value = e.target.textContent;\n    setType(value);\n    setSort('none');\n    const letSubtype = value === 'Готові рішення' ? 'Зелений тариф' : 'Панелі';\n    setSubtype(letSubtype);\n\n    setSearchParams(prevSearchParams => {\n      const newSearchParams = new URLSearchParams(prevSearchParams);\n      newSearchParams.set('subtype', letSubtype);\n      newSearchParams.set('sort', 'none');\n      newSearchParams.set('page', '1');\n      newSearchParams.set('type', value);\n      return newSearchParams;\n    });\n  };\n\n  const handleSort = ({ value }) => {\n    setSort(value);\n    setSearchParams(prevSearchParams => {\n      const newSearchParams = new URLSearchParams(prevSearchParams);\n      newSearchParams.set('sort', value);\n      newSearchParams.set('page', '1');\n      return newSearchParams;\n    });\n  };\n\n  const handleSubtype = ({ value }) => {\n    setSubtype(value);\n    setSort('none');\n    setSearchParams(prevSearchParams => {\n      const newSearchParams = new URLSearchParams(prevSearchParams);\n      newSearchParams.set('sort', 'none');\n      newSearchParams.set('page', '1');\n      newSearchParams.set('subtype', value);\n      return newSearchParams;\n    });\n  };\n\n  useEffect(() => {\n    if (subtypeParams)\n      setTimeout(() => {\n        setSubtype(subtypeParams);\n      }, 10);\n\n    if (sortParams)\n      setTimeout(() => {\n        setSort(sortParams);\n      }, 10);\n  }, [subtypeParams, sortParams]);\n\n  useEffect(() => {\n    setType(typeParams);\n    if (typeParams === 'Готові рішення') setSubtype('Зелений тариф');\n    if (typeParams === 'Компоненти') setSubtype('Панелі');\n    setSort('none');\n  }, [typeParams]);\n\n  return (\n    <InnerNav>\n      <WrapperTab>\n        <ButtonTab\n          type={'button'}\n          onClick={handleType}\n          active={type === 'Компоненти'}\n        >\n          Компоненти\n        </ButtonTab>\n        <ButtonTab\n          type={'button'}\n          onClick={handleType}\n          active={type === 'Готові рішення'}\n        >\n          Готові рішення\n        </ButtonTab>\n      </WrapperTab>\n      <WrapperSort>\n        <SortLabelWrap>\n          Тип:\n          <SelectCustom\n            options={type === 'Готові рішення' ? subtypeSolution : subtypeGoods}\n            value={{ value: subtype, label: subtype }}\n            onChange={handleSubtype}\n            isSearchable={false}\n            className=\"react-select-container\"\n            classNamePrefix=\"react-select\"\n          />\n        </SortLabelWrap>\n        <SortLabelWrap>\n          Сортування:\n          <SelectCustom\n            options={optionSort(subtype)}\n            value={{ value: sort, label: sortLabel }}\n            onChange={handleSort}\n            isSearchable={false}\n            className=\"react-select-container\"\n            classNamePrefix=\"react-select\"\n          />\n        </SortLabelWrap>\n      </WrapperSort>\n    </InnerNav>\n  );\n};\n","import { baseURL } from '../API/API';\nimport { Inner } from '../../adminPage/StoreDB/ListProduct/ListProduct.styled';\nimport {\n  CostProduts,\n  ImgProduts,\n  ItemProduts,\n  ListProduts,\n  NotFoundText,\n  TitleProduts,\n  PowerSpan,\n  ItemProdutsLink,\n  WrapperImgProducts,\n} from './ListTableProduct.styled';\nimport { LoadPage } from '../LoadSpiner/LoadPage';\nimport { numbersFormatCost } from '../../services/numbersFormatCost';\nimport { Icon } from '../Icon/Icon';\n\nexport const ListGoods = ({ products, type, isLoading }) => {\n  return (\n    <>\n      <Inner>\n        <ListProduts>\n          {products.result && !isLoading ? (\n            products.result.length > 0 ? (\n              products.result.map(item => (\n                <ItemProduts\n                  key={item.id}\n                  flex={type ? ['2', '3', '4'] : ['2', '3', '3']}\n                >\n                  <ItemProdutsLink\n                    to={`${type ? 'set' : 'component'}?id=${item.id}`}\n                    onClick={() => {\n                      window.scrollTo(0, 0);\n                    }}\n                  >\n                    <WrapperImgProducts>\n                      <ImgProduts\n                        src={`${baseURL}/${item.photo}`}\n                        alt={item.title}\n                      />\n                    </WrapperImgProducts>\n                    {type && <PowerSpan>{item.power}</PowerSpan>}\n                    <TitleProduts>{item.title}</TitleProduts>\n                    <CostProduts>\n                      <Icon name=\"icon-cart-buy\" />\n                      {numbersFormatCost(item.cost)}$\n                    </CostProduts>\n                  </ItemProdutsLink>\n                </ItemProduts>\n              ))\n            ) : (\n              <NotFoundText>{'Нічого не знайдено :)'}</NotFoundText>\n            )\n          ) : (\n            <LoadPage />\n          )}\n        </ListProduts>\n      </Inner>\n    </>\n  );\n};\n","import {\n  BackDropFilter,\n  FilterToggle,\n  Inner,\n  WrapperFilter,\n  WrapperStore,\n} from './Store.styled';\nimport { Filter } from '../../components/Filter/Filter';\nimport GoogleAnalyticsWrapper from '../../components/GoogleAnalyticsWrapper/GoogleAnalyticsWrapper';\nimport { StoreNav } from '../../components/StoreNav/StoreNav';\nimport { ListGoods } from '../../components/ListGoods/ListGoods';\nimport Pagination from '../../components/Pagination/Pagination';\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport {\n  getFilterStoreComponent,\n  getStoreComponents,\n  getStoreSets,\n} from '../../components/API/API';\nimport { Container, Frontier } from '../Common.styled';\nimport { Icon } from '../../components/Icon/Icon';\nimport { Consult } from '../../components/Сonsult/Сonsult';\nimport useWindowWidth from '../../services/widthScreen';\nimport { Call } from '../../components/Call/Call';\n\nconst initialFilter = {\n  brand: [],\n  country: [],\n  subtype: [],\n  power: [],\n  material: [],\n  reservoir: [],\n  voltage: [],\n  phases: [],\n};\n\nconst Store = () => {\n  const widthScreen = useWindowWidth();\n  const limit = 12;\n  const [searchParams, setSearchParams] = useSearchParams();\n  const pageParams = searchParams.get('page');\n  const typeParams = searchParams.get('type');\n  const subtypeParams = searchParams.get('subtype');\n  const sortParams = searchParams.get('sort');\n  const [products, setProducts] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [filterList, setFilterList] = useState({});\n  const [selectedValues, setSelectedValues] = useState(initialFilter);\n  const [isShowFilter, setIsShowFilter] = useState(false);\n\n  const handleCheckboxChange = (e, filter) => {\n    const { value, checked } = e.target;\n\n    if (checked) {\n      setSelectedValues(prevValues => ({\n        ...prevValues,\n        [filter]: [...prevValues[filter], value],\n      }));\n    } else {\n      setSelectedValues(prevValues => ({\n        ...prevValues,\n        [filter]: prevValues[filter].filter(item => item !== value),\n      }));\n    }\n  };\n\n  useEffect(() => {\n    setSearchParams(prevSearchParams => {\n      const newSearchParams = new URLSearchParams(prevSearchParams);\n      newSearchParams.set('page', '1');\n      return newSearchParams;\n    });\n  }, [selectedValues, setSearchParams]);\n\n  useEffect(() => {\n    if (isShowFilter) document.body.classList.add('no-scroll');\n    if (!isShowFilter) document.body.classList.remove('no-scroll');\n  }, [isShowFilter]);\n\n  useEffect(() => {\n    setSearchParams(prevSearchParams => {\n      const newSearchParams = new URLSearchParams(prevSearchParams);\n      if (!pageParams) newSearchParams.set('page', '1');\n      if (!typeParams) newSearchParams.set('type', 'Компоненти');\n      return newSearchParams;\n    });\n  }, [typeParams, pageParams, setSearchParams]);\n\n  useEffect(() => {\n    setSelectedValues(initialFilter);\n  }, [typeParams, subtypeParams]);\n\n  useEffect(() => {\n    const type = typeParams || 'Компоненти';\n    const subtype =\n      subtypeParams || (type === 'Готові рішення' ? 'Зелений тариф' : 'Панелі');\n\n    const fetchProducts = async () => {\n      setIsLoading(true);\n      const page = Number(pageParams) || 1;\n\n      const sort = sortParams || 'none';\n\n      if (!type || !page || !subtype || !sort) return setIsLoading(false);\n\n      try {\n        let data;\n\n        if (type === 'Готові рішення')\n          data = await getStoreSets(page, limit, subtype, sort);\n\n        if (type === 'Компоненти')\n          data = await getStoreComponents(\n            page,\n            limit,\n            subtype,\n            sort,\n            selectedValues\n          );\n\n        setProducts(data);\n        setIsLoading(false);\n      } catch (error) {\n        setProducts([]);\n        setIsLoading(false);\n      }\n\n      setIsLoading(false);\n    };\n\n    const getFilter = async () => {\n      const data = await getFilterStoreComponent(subtype);\n      setFilterList(data);\n    };\n\n    fetchProducts().catch(err => console.log(err));\n    getFilter().catch(err => console.log(err));\n  }, [pageParams, typeParams, sortParams, subtypeParams, selectedValues]);\n\n  return (\n    <GoogleAnalyticsWrapper>\n      <Container>\n        <Inner>\n          <WrapperFilter\n            isShow={\n              typeParams === 'Компоненти' && Object.keys(filterList).length > 0\n            }\n            isShowFilter={isShowFilter}\n          >\n            <Filter\n              filterList={filterList}\n              isShow={\n                typeParams === 'Компоненти' &&\n                Object.keys(filterList).length > 0\n              }\n              handleCheckboxChange={handleCheckboxChange}\n              count={products.count}\n              isLoading={isLoading}\n              setCheck={setSelectedValues}\n              initialFilter={initialFilter}\n              subtypeParams={subtypeParams}\n            />\n            {typeParams === 'Компоненти' &&\n              Object.keys(filterList).length > 0 && (\n                <FilterToggle\n                  type={'button'}\n                  onClick={() => setIsShowFilter(prev => !prev)}\n                  isShowFilter={isShowFilter}\n                >\n                  {!isShowFilter ? (\n                    <Icon name={'icon-filter'} />\n                  ) : (\n                    <Icon name={'icon-cancel'} />\n                  )}\n                </FilterToggle>\n              )}\n          </WrapperFilter>\n          <BackDropFilter\n            isShowFilter={isShowFilter}\n            onClick={() => setIsShowFilter(false)}\n          ></BackDropFilter>\n          <WrapperStore>\n            <StoreNav isLoading={isLoading} />\n            <ListGoods\n              products={products}\n              isLoading={isLoading}\n              type={typeParams === 'Готові рішення'}\n            />\n            {products.count / limit > 1 && (\n              <Pagination limit={limit} count={products.count} />\n            )}\n          </WrapperStore>\n        </Inner>\n      </Container>\n      <Frontier color={'main'}>\n        <Consult widthScreen={widthScreen} />\n      </Frontier>\n      <Call />\n    </GoogleAnalyticsWrapper>\n  );\n};\n\nexport default Store;\n","export const numbersFormatCost = number => {\n  const numberString = String(number);\n  const formattedNumber = [];\n  let group = '';\n\n  for (let i = numberString.length - 1; i >= 0; i--) {\n    group = numberString[i] + group;\n    if (group.length === 3 || i === 0) {\n      formattedNumber.unshift(group);\n      group = '';\n    }\n  }\n\n  return formattedNumber.join(' ');\n};\n"],"names":["SectionTitle","styled","theme","colorText","color","text","marginBottom","SectionSubtitle","maxWidth","Inner","callAnim","keyframes","CallBox","second","white","Call","toggleModal","useShowModal","onClick","Icon","name","viewBox","children","location","useLocation","useEffect","window","gtag","page_path","pathname","ListProduts","TitleProduts","g2","ItemProduts","flex","ItemProdutsLink","NavLink","WrapperImgProducts","ImgProduts","PowerSpan","CostProduts","BoxBtnProducts","ButtonProducts","additional","main","NotFoundText","ReactPaginateStyled","ReactPaginate","Wrapper","BtnWrapper","g200","count","limit","useSearchParams","searchParams","setSearchParams","page","get","rightArrow","style","transform","leftArrow","pageCount","Math","ceil","Number","previousLabel","nextLabel","breakLabel","containerClassName","previousLinkClassName","nextLinkClassName","pageLinkClassName","activeLinkClassName","disableInitialCallback","forcePage","onPageChange","selectedPage","newPage","selected","prevSearchParams","newSearchParams","URLSearchParams","set","String","scrollTo","marginPagesDisplayed","pageRangeDisplayed","Consult","widthScreen","currentPath","split","lang","length","src","consult_img","alt","width","height","loading","type","colorBgHover","InnerConsult","WrapperOverHidden","WrapperText","WrapperImgPos","WrapperFlex","ArrowConsult","ImgConsult","WrapperStore","WrapperFilter","isShow","isShowFilter","FilterToggle","BackDropFilter","ListFilter","ItemFilter","TitleFilter","ListCheckBox","ItemCheckBox","LabelCheckBox","InputCheckBox","TextCheckBox","CustomCheckBox","FilterForm","CountInfo","ResetFilter","Filter","filterList","handleCheckboxChange","isLoading","setCheck","initialFilter","subtypeParams","formRef","useRef","ref","sortSubtype","map","item","value","onChange","e","disabled","sortCountry","sortBrand","sortPhases","sortPower","sortReservoir","sortVoltage","sortMaterial","LoadSpiner","barColor","borderColor","current","reset","InnerNav","WrapperTab","WrapperSort","SortLabelWrap","ButtonTab","active","SelectCustom","Select","g500","subtypeSolution","label","subtypeGoods","StoreNav","typeParams","sortParams","useState","setType","subtype","setSubtype","sort","setSort","optionSort","sortList","includes","sortLabel","find","i","handleType","target","textContent","letSubtype","setTimeout","options","isSearchable","className","classNamePrefix","ListGoods","products","result","to","id","baseURL","photo","title","power","numbersFormatCost","cost","LoadPage","brand","country","material","reservoir","voltage","phases","useWindowWidth","pageParams","setProducts","setIsLoading","setFilterList","selectedValues","setSelectedValues","setIsShowFilter","document","body","classList","add","remove","fetchProducts","getStoreSets","data","getStoreComponents","getFilter","getFilterStoreComponent","catch","err","console","log","GoogleAnalyticsWrapper","Object","keys","filter","checked","prevValues","prev","Pagination","number","numberString","formattedNumber","group","unshift","join"],"sourceRoot":""}