{"version":3,"file":"static/js/671.7108ba5e.chunk.js","mappings":"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","sources":["CommonStyle/SectionTitle.styled.jsx","components/Call/Call.styled.jsx","components/Call/Call.jsx","components/GoBackBtn/GoBackBtn.styled.jsx","components/GoBackBtn/GoBackBtn.jsx","components/GoogleAnalyticsWrapper/GoogleAnalyticsWrapper.jsx","components/Сonsult/Сonsult.jsx","components/Сonsult/Сonsult.styled.jsx","pages/Store/StoreByOne.styled.jsx","pages/Store/StoreByOne.jsx","services/numbersFormatCost.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SectionTitle = styled.h2`\n  color: ${({ theme, colorText }) =>\n    theme.color[colorText ? colorText : 'main']};\n  text-transform: uppercase;\n  line-height: 1.3;\n  font-size: 30px;\n  text-align: ${({ text }) => (text ? text : 'center')};\n  margin-bottom: ${({ marginBottom }) => (marginBottom ? marginBottom : '0')};\n\n  @media screen and (max-width: 999px) {\n    font-size: 25px;\n  }\n`;\n\nexport const SectionSubtitle = styled.p`\n  color: ${({ theme, colorText }) =>\n    theme.color[colorText ? colorText : 'g500']};\n  font-size: 16px;\n  text-align: ${({ text }) => (text ? text : 'center')};\n  margin-top: 10px;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: ${({ maxWidth }) => (maxWidth ? maxWidth : 'initial')};\n`;\n","import styled, { keyframes } from 'styled-components';\n\nconst callAnim = keyframes`\n    0% {\n        transform: rotate(0);\n    }\n    10% {\n        transform: rotate(30deg);\n    }\n    20% {\n        transform: rotate(0);\n\n    }\n    100% {\n        transform: rotate(0);\n\n    }\n`;\n\nexport const CallBox = styled.div`\n  position: fixed;\n  z-index: 20;\n  bottom: 100px;\n  right: 15px;\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.color.second};\n  box-shadow: rgba(0, 0, 0, 0.24) 0 3px 8px;\n  cursor: pointer;\n  width: 60px;\n  height: 60px;\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  transition: transform 350ms ease;\n\n  @media screen and (max-width: 767px) {\n    width: 50px;\n    height: 50px;\n  }\n\n  svg {\n    width: 35px;\n    height: 35px;\n    stroke: ${({ theme }) => theme.color.white};\n    fill: transparent;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    animation-name: ${callAnim};\n    animation-duration: 3.5s;\n    animation-iteration-count: infinite;\n    animation-timing-function: ease;\n\n    @media screen and (max-width: 767px) {\n      width: 25px;\n      height: 25px;\n    }\n  }\n\n  :hover {\n    transform: scale(1.1);\n  }\n`;\n","import { Icon } from 'components/Icon/Icon';\nimport { CallBox } from './Call.styled';\nimport { useShowModal } from 'globalState/globalState';\n\nexport const Call = () => {\n  const { toggleModal } = useShowModal();\n  return (\n    <CallBox onClick={() => toggleModal(true)}>\n      <Icon name=\"icon-call\" viewBox=\"0 0 24 24\" />\n    </CallBox>\n  );\n};\n","import styled from 'styled-components';\n\nexport const WrapperNavBack = styled.div`\n  width: 100%;\n`;\n\nexport const ButtonBack = styled.button`\n  border: none;\n  background: transparent;\n  cursor: pointer;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.color.g2};\n  transition: color 350ms ease;\n  margin-bottom: 15px;\n\n  svg {\n    width: 30px;\n    height: 30px;\n    stroke: ${({ theme }) => theme.color.g2};\n    transition: stroke 350ms ease;\n  }\n\n  :hover {\n    color: ${({ theme }) => theme.color.second};\n\n    svg {\n      stroke: ${({ theme }) => theme.color.second};\n    }\n  }\n`;\n","import { useNavigate } from 'react-router-dom';\nimport { ButtonBack, WrapperNavBack } from './GoBackBtn.styled';\nimport { Icon } from '../Icon/Icon';\n\nexport const GoBackBtn = () => {\n  const navigate = useNavigate();\n  return (\n    <WrapperNavBack>\n      <ButtonBack type={'button'} onClick={() => navigate(-1)}>\n        <Icon name={'icon-arrow'} /> Назад\n      </ButtonBack>\n    </WrapperNavBack>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst GoogleAnalyticsWrapper = ({ children }) => {\n  const location = useLocation();\n\n  useEffect(() => {\n    if (process.env.NODE_ENV === 'development') return;\n\n    // Отправка события отслеживания страницы Google Analytics при каждом переходе на новую страницу\n    window.gtag('config', 'G-XFN527HLQ5', {\n      page_path: location.pathname,\n    });\n  }, [location]);\n\n  return <>{children}</>;\n};\n\nexport default GoogleAnalyticsWrapper;\n","import {\n  ArrowConsult,\n  ImgConsult,\n  InnerConsult,\n  WrapperFlex,\n  WrapperImgPos,\n  WrapperOverHidden,\n  WrapperText,\n} from './Сonsult.styled';\nimport { Icon } from '../Icon/Icon';\nimport consult_img from '../../img/consult/consult.webp';\nimport { SectionTitle } from '../../CommonStyle/SectionTitle.styled';\nimport { ButtonOrg } from '../../CommonStyle/ButtonCommon.styled';\nimport { useShowModal } from '../../globalState/globalState';\nimport { Container } from '../../pages/Common.styled';\nimport { useLocation } from 'react-router-dom';\n\nexport const Consult = ({ widthScreen }) => {\n  const { toggleModal } = useShowModal();\n\n  const location = useLocation();\n  const currentPath = location.pathname.split('/');\n  const lang = currentPath[currentPath.length - 1];\n\n  return (\n    <InnerConsult>\n      <ArrowConsult>\n        <Icon name={'icon-arrow-consult'} />\n      </ArrowConsult>\n      <WrapperOverHidden>\n        <Container>\n          <WrapperFlex>\n            <WrapperImgPos>\n              <ImgConsult\n                src={consult_img}\n                alt={'Встановлення панелей'}\n                width={'715'}\n                height={'710'}\n                loading=\"lazy\"\n              />\n            </WrapperImgPos>\n            <WrapperText>\n              <SectionTitle\n                marginBottom={'30px'}\n                text={widthScreen < 768 ? 'center' : 'left'}\n                colorText={'white'}\n              >\n                {lang === 'ru' ? 'Подберем лучший' : 'Підберемо найкращий'}\n                {widthScreen >= 768 && <br />}{' '}\n                {lang === 'ru' ? 'вариант для вас' : 'варіант для вас'}\n              </SectionTitle>\n              <ButtonOrg\n                type={'button'}\n                colorBgHover={'secondBlur'}\n                onClick={() => toggleModal(true)}\n              >\n                <Icon name={'icon-annotation'} />{' '}\n                {lang === 'ru'\n                  ? 'Заказать консультацию'\n                  : 'Замовити консультацію'}\n              </ButtonOrg>\n            </WrapperText>\n          </WrapperFlex>\n        </Container>\n      </WrapperOverHidden>\n    </InnerConsult>\n  );\n};\n","import styled from 'styled-components';\n\nexport const InnerConsult = styled.div`\n  width: 100%;\n  position: relative;\n  margin-top: 70px;\n`;\n\nexport const WrapperOverHidden = styled.div`\n  padding: 100px 0;\n  overflow: hidden;\n\n  @media screen and (max-width: 767px) {\n    padding: 50px 0;\n  }\n`;\n\nexport const WrapperText = styled.div`\n  width: 53%;\n\n  @media screen and (max-width: 767px) {\n    width: 100%;\n    text-align: center;\n\n    button {\n      margin: 0 auto;\n    }\n  }\n`;\n\nexport const WrapperImgPos = styled.div`\n  width: 47%;\n  position: relative;\n\n  @media screen and (max-width: 767px) {\n    width: 100%;\n    height: 250px;\n  }\n`;\n\nexport const WrapperFlex = styled.div`\n  display: flex;\n\n  @media screen and (max-width: 767px) {\n    flex-direction: column;\n  }\n`;\n\nexport const ArrowConsult = styled.div`\n  width: 50px;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: -25px;\n  left: 50%;\n  transform: translateX(-50%);\n  z-index: 20;\n\n  svg {\n    width: 50px;\n    height: 50px;\n  }\n`;\n\nexport const ImgConsult = styled.img`\n  position: absolute;\n  top: -200px;\n  left: -80px;\n  width: 580px;\n\n  @media screen and (max-width: 1200px) {\n    top: -150px;\n    left: -200px;\n  }\n\n  @media screen and (max-width: 999px) {\n    left: -300px;\n  }\n\n  @media screen and (max-width: 767px) {\n    width: 450px;\n    left: 50%;\n    top: -230px;\n    transform: translateX(-50%);\n  }\n`;\n\nexport const ConsultText = styled.p`\n  font-size: 18px;\n  color: ${({ theme }) => theme.color.white};\n  line-height: 1.5;\n  margin-bottom: 30px;\n\n  @media screen and (max-width: 999px) {\n  }\n\n  @media screen and (max-width: 767px) {\n  }\n`;\n","import styled from 'styled-components';\n\nexport const InnerProduct = styled.div`\n  margin-top: 90px;\n  padding: 20px 0;\n\n  @media screen and (max-width: 999px) {\n    margin-top: 80px;\n  }\n  @media screen and (max-width: 767px) {\n    margin-top: 70px;\n    padding: 0;\n  }\n`;\n\nexport const IntroWrapper = styled.div`\n  display: flex;\n  margin-bottom: 30px;\n\n  @media screen and (max-width: 767px) {\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nexport const NameBox = styled.div`\n  flex: 1;\n  padding-left: 20px;\n\n  button {\n    @media screen and (max-width: 767px) {\n      margin: 0 auto 15px auto;\n    }\n  }\n\n  @media screen and (max-width: 767px) {\n    padding: 0;\n    width: 100%;\n  }\n`;\n\nexport const ImgProduct = styled.img`\n  max-width: 350px;\n  width: 100%;\n\n  @media screen and (max-width: 767px) {\n    margin-bottom: 15px;\n  }\n`;\n\nexport const TitleProduct = styled.h2`\n  font-size: 28px;\n  color: ${({ theme }) => theme.color.main};\n  margin-bottom: 30px;\n\n  @media screen and (max-width: 999px) {\n    font-size: 24px;\n  }\n\n  @media screen and (max-width: 767px) {\n    font-size: 20px;\n  }\n`;\n\nexport const CostProduct = styled.p`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.color.g2};\n\n  font-size: 20px;\n  margin-bottom: 15px;\n  :last-of-type {\n    margin-bottom: 30px;\n  }\n\n  :first-of-type {\n    margin-top: 30px;\n  }\n\n  @media screen and (max-width: 999px) {\n    font-size: 18px;\n  }\n\n  svg {\n    width: 20px;\n    height: 20px;\n    fill: ${({ theme }) => theme.color.second};\n    margin-right: 7px;\n  }\n`;\n\nexport const PdfFileLink = styled.a`\n  display: inline-flex;\n  align-items: center;\n  font-size: 16px;\n  margin-top: 30px;\n  font-family: inherit;\n  font-weight: inherit;\n  color: ${({ theme }) => theme.color.g2};\n\n  :hover {\n    text-decoration: underline;\n  }\n`;\n\nexport const PdfFileIcon = styled.img`\n  width: 50px;\n  height: 50px;\n  margin-right: 5px;\n`;\n\nexport const WrapperDescrip = styled.div`\n  margin: 15px auto 30px auto;\n  border-radius: 10px;\n  height: ${({ full, isOpen }) => (full && !isOpen ? '300px' : 'auto')};\n  position: relative;\n  overflow: hidden;\n\n  p {\n    margin-top: 20px;\n  }\n`;\n\nexport const SpanDesrip = styled.span`\n  font-size: 16px;\n  color: rgba(255, 255, 255, 0.9);\n  display: flex;\n  font-weight: 700;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  bottom: 5px;\n  left: 50%;\n  transform: translateX(-50%);\n  height: 40px;\n  cursor: pointer;\n  background-color: ${({ theme }) => theme.color.main};\n  width: 200px;\n  border-radius: 20px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0 3px 8px;\n`;\n\nexport const ListCharacter = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 30px;\n  margin-top: 15px;\n\n  @media screen and (max-width: 767px) {\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    margin-top: 20px;\n  }\n`;\n\nexport const ItemCharacter = styled.li`\n  padding: 20px;\n  border-radius: 10px;\n\n  @media screen and (max-width: 767px) {\n    max-width: 420px;\n    width: 100%;\n    margin-bottom: 15px;\n    align-items: center;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin: calc(20px / 2);\n    flex-basis: calc(100% / 2 - 20px);\n  }\n`;\n\nexport const OptionList = styled.ul`\n  list-style: initial;\n  margin-left: 20px;\n  margin-top: 10px;\n  color: ${({ theme, isWhite }) =>\n    isWhite ? theme.color.white : theme.color.black};\n`;\n\nexport const OptionItem = styled.li`\n  :not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const OptionText = styled.p`\n  font-size: 18px;\n  color: ${({ theme, isWhite }) =>\n    isWhite ? theme.color.white : theme.color.g2};\n  font-weight: ${({ isBold }) => (isBold ? '700' : '500')};\n  line-height: 1.4;\n  text-align: ${({ isCenter }) => (isCenter ? 'center' : 'left')};\n\n  @media screen and (max-width: 999px) {\n    font-size: 16px;\n    text-align: left;\n  }\n`;\n\nexport const WrapperShemaItems = styled.div`\n  margin-bottom: 40px;\n`;\n\nexport const ImgShema = styled.img`\n  border-radius: 20px;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  max-width: 700px;\n  width: 100%;\n  height: auto;\n  margin: 20px auto;\n`;\n\nexport const ItemElement = styled.li`\n  display: flex;\n  justify-content: start;\n  align-items: start;\n\n  @media screen and (max-width: 767px) {\n    max-width: 420px;\n    width: 100%;\n    margin-bottom: 30px;\n    align-items: center;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin: calc(20px / 2);\n    flex-basis: calc(100% / 2 - 20px);\n  }\n\n  @media screen and (max-width: 999px) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nexport const ElementImage = styled.img`\n  width: 150px;\n  margin-right: 10px;\n\n  @media screen and (max-width: 999px) {\n    margin-bottom: 15px;\n    margin-right: 0;\n  }\n`;\n\nexport const WrapperOptionEl = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  align-items: start;\n\n  p {\n    @media screen and (max-width: 999px) {\n      width: 100%;\n    }\n  }\n`;\n\nexport const VideoList = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n\nexport const VideoItem = styled.li`\n  width: 50%;\n  padding: 10px;\n\n  @media screen and (max-width: 767px) {\n    width: 100%;\n  }\n`;\n\nexport const VideoFrame = styled.iframe`\n  width: 100%;\n  height: 315px;\n  border-radius: 10px;\n\n  @media screen and (max-width: 999px) {\n    height: 215px;\n  }\n`;\n\nexport const DescripImgList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  align-items: center;\n`;\n\nexport const DescripImgItem = styled.li`\n  max-width: 1000px;\n  width: 100%;\n`;\n\nexport const DescripImg = styled.img`\n  width: 100%;\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\n\nimport {\n  baseURL,\n  getByIdStoreComponent,\n  getByIdStoreSet,\n} from '../../components/API/API';\nimport { LoadPage } from '../../components/LoadSpiner/LoadPage';\nimport {\n  CostProduct,\n  DescripImg,\n  DescripImgItem,\n  DescripImgList,\n  ElementImage,\n  ImgProduct,\n  ImgShema,\n  InnerProduct,\n  IntroWrapper,\n  ItemCharacter,\n  ItemElement,\n  ListCharacter,\n  NameBox,\n  OptionItem,\n  OptionList,\n  OptionText,\n  PdfFileIcon,\n  PdfFileLink,\n  SpanDesrip,\n  VideoFrame,\n  VideoItem,\n  VideoList,\n  WrapperDescrip,\n  WrapperOptionEl,\n  WrapperShemaItems,\n} from './StoreByOne.styled';\nimport { numbersFormatCost } from '../../services/numbersFormatCost';\nimport { Icon } from '../../components/Icon/Icon';\nimport { useBasket, useShowModal } from '../../globalState/globalState';\n\nimport { Container, Frontier } from '../Common.styled';\nimport { SectionTitle } from '../../CommonStyle/SectionTitle.styled';\nimport { ButtonOrg } from '../../CommonStyle/ButtonCommon.styled';\n\nimport { Consult } from '../../components/Сonsult/Сonsult';\nimport useWindowWidth from '../../services/widthScreen';\nimport { GoBackBtn } from '../../components/GoBackBtn/GoBackBtn';\nimport GoogleAnalyticsWrapper from '../../components/GoogleAnalyticsWrapper/GoogleAnalyticsWrapper';\nimport { Call } from '../../components/Call/Call';\n\nimport iconPdfFile from '../../img/pdf-icon.webp';\n\nconst StoreByOne = () => {\n  const widthScreen = useWindowWidth();\n  const { typeProduct } = useParams();\n  const [searchParams] = useSearchParams();\n  const id = searchParams.get('id');\n  const [product, setProduct] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const { toggleModal, isShowModal } = useShowModal();\n  const { setGood } = useBasket();\n  const descripRef = useRef(null);\n  const [descripHight, setDescripHight] = useState({ value: 0, isOpen: false });\n\n  const clickGood = nameGood => {\n    setGood(nameGood);\n    toggleModal(true);\n  };\n\n  useEffect(() => {\n    if (descripRef.current) {\n      const height = descripRef.current.offsetHeight;\n      setDescripHight(prevState => ({ ...prevState, value: height }));\n    }\n  }, [isLoading]);\n\n  useEffect(() => {\n    if (!isShowModal) {\n      setGood(null);\n    }\n  }, [isShowModal, setGood]);\n\n  useEffect(() => {\n    const fetchProduct = async () => {\n      if (!typeProduct || !searchParams) return;\n\n      setIsLoading(true);\n      let data = undefined;\n      if (typeProduct === 'set') {\n        data = await getByIdStoreSet(id);\n      }\n      if (typeProduct === 'component') {\n        data = await getByIdStoreComponent(id);\n      }\n      setProduct(data ? data.result : null);\n      setIsLoading(false);\n    };\n\n    fetchProduct().catch(err => console.log(err));\n  }, [id, typeProduct, searchParams]);\n\n  return (\n    <GoogleAnalyticsWrapper>\n      {isLoading ? (\n        <LoadPage />\n      ) : (\n        <Container>\n          <InnerProduct>\n            <GoBackBtn />\n            <IntroWrapper>\n              <ImgProduct\n                src={`${baseURL}/${product.photo}`}\n                alt={product.title}\n                width=\"500\"\n                height=\"500\"\n              />\n              <NameBox>\n                <SectionTitle text={'left'}>{product.title}</SectionTitle>\n                <CostProduct>\n                  {typeProduct === 'component' ? 'Компонент:' : 'Тип:'}{' '}\n                  {product.type}\n                </CostProduct>\n                {typeProduct === 'component' && (\n                  <>\n                    {JSON.parse(product.optionSort).subtype && (\n                      <CostProduct>\n                        Тип: {JSON.parse(product.optionSort).subtype}\n                      </CostProduct>\n                    )}\n                    {JSON.parse(product.optionSort).material && (\n                      <CostProduct>\n                        Матеріал: {JSON.parse(product.optionSort).material}\n                      </CostProduct>\n                    )}\n                  </>\n                )}\n                <CostProduct>\n                  <Icon name=\"icon-cart-buy\" />\n                  {numbersFormatCost(product.cost)}$\n                </CostProduct>\n                <ButtonOrg\n                  type={'button'}\n                  onClick={() => clickGood(product.title)}\n                >\n                  <Icon name={'icon-phone'} /> Замовити\n                </ButtonOrg>\n                {product.pdfUrl && (\n                  <PdfFileLink\n                    href={`${baseURL}/${product.pdfUrl}`}\n                    target={'_blank'}\n                  >\n                    <PdfFileIcon\n                      src={iconPdfFile}\n                      alt={'Icon PDF'}\n                      width={'72'}\n                      height={'72'}\n                    />\n                    {product.pdfUrl.split('/')[3]}\n                  </PdfFileLink>\n                )}\n              </NameBox>\n            </IntroWrapper>\n            <WrapperDescrip\n              ref={descripRef}\n              full={descripHight.value > 250}\n              isOpen={descripHight.isOpen}\n            >\n              <SectionTitle>Опис товару</SectionTitle>\n              <OptionText>{product.descripMain}</OptionText>\n              {descripHight.value > 250 && !descripHight.isOpen && (\n                <SpanDesrip\n                  onClick={() =>\n                    setDescripHight(prevState => ({\n                      ...prevState,\n                      isOpen: true,\n                    }))\n                  }\n                >\n                  Читати повністю\n                </SpanDesrip>\n              )}\n            </WrapperDescrip>\n            <ListCharacter>\n              {JSON.parse(product.descripCharacter).map((item, index) => (\n                <ItemCharacter key={index}>\n                  <OptionText isBold={true} isWhite={false} isCenter={false}>\n                    {item.subtitle}\n                  </OptionText>\n                  <OptionList isWhite={false}>\n                    {item.option.map((iOption, index) => {\n                      if (iOption.trim() === '') return '';\n                      return (\n                        <OptionItem key={index}>\n                          <OptionText isWhite={false}>{iOption}</OptionText>\n                        </OptionItem>\n                      );\n                    })}\n                  </OptionList>\n                </ItemCharacter>\n              ))}\n            </ListCharacter>\n            {typeProduct === 'set' && (\n              <>\n                <WrapperShemaItems>\n                  <SectionTitle>Схема роботи СЕС</SectionTitle>\n                  <ImgShema\n                    src={`${baseURL}/${product.descripPhoto}`}\n                    alt={'Схема роботи СЕС'}\n                  />\n                </WrapperShemaItems>\n                <WrapperShemaItems>\n                  <SectionTitle>Елементи СЕС</SectionTitle>\n                  <ListCharacter>\n                    {JSON.parse(product.components).map((item, index) => (\n                      <ItemElement key={index}>\n                        <ElementImage\n                          src={`${baseURL}/${item.image}`}\n                          alt={item.subtitle}\n                        />\n                        <WrapperOptionEl>\n                          <OptionText isBold={true}>{item.subtitle}</OptionText>\n                          <OptionList>\n                            {item.option.map((iOption, indexOption) => (\n                              <OptionItem key={indexOption}>\n                                <OptionText>{iOption}</OptionText>\n                              </OptionItem>\n                            ))}\n                          </OptionList>\n                        </WrapperOptionEl>\n                      </ItemElement>\n                    ))}\n                  </ListCharacter>\n                </WrapperShemaItems>\n              </>\n            )}\n            {product.descripPhotos && (\n              <DescripImgList>\n                {JSON.parse(product.descripPhotos).map(urlPhoto => (\n                  <DescripImgItem key={urlPhoto}>\n                    <DescripImg\n                      src={`${baseURL}/${urlPhoto}`}\n                      alt={'Фото для опису характеристики'}\n                    />\n                  </DescripImgItem>\n                ))}\n              </DescripImgList>\n            )}\n            {product.youtubeUrl && (\n              <VideoList>\n                {JSON.parse(product.youtubeUrl).map((idVideo, index) => {\n                  if (idVideo.trim() === '') return '';\n                  return (\n                    <VideoItem key={index}>\n                      <VideoFrame\n                        width=\"560\"\n                        height=\"315\"\n                        src={`https://www.youtube.com/embed/${\n                          idVideo.trim().split('v=')[1].split('&')[0]\n                        }`}\n                        title=\"YouTube video player\"\n                        frameborder=\"0\"\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture;\"\n                        allowfullscreen\n                      ></VideoFrame>\n                    </VideoItem>\n                  );\n                })}\n              </VideoList>\n            )}\n          </InnerProduct>\n        </Container>\n      )}\n      <Frontier color={'main'}>\n        <Consult widthScreen={widthScreen} />\n      </Frontier>\n      <Call />\n    </GoogleAnalyticsWrapper>\n  );\n};\n\nexport default StoreByOne;\n","export const numbersFormatCost = number => {\n  const numberString = String(number);\n  const formattedNumber = [];\n  let group = '';\n\n  for (let i = numberString.length - 1; i >= 0; i--) {\n    group = numberString[i] + group;\n    if (group.length === 3 || i === 0) {\n      formattedNumber.unshift(group);\n      group = '';\n    }\n  }\n\n  return formattedNumber.join(' ');\n};\n"],"names":["SectionTitle","styled","theme","colorText","color","text","marginBottom","SectionSubtitle","maxWidth","callAnim","keyframes","CallBox","second","white","Call","toggleModal","useShowModal","onClick","Icon","name","viewBox","WrapperNavBack","ButtonBack","g2","GoBackBtn","navigate","useNavigate","type","children","location","useLocation","useEffect","window","gtag","page_path","pathname","Consult","widthScreen","currentPath","split","lang","length","src","consult_img","alt","width","height","loading","colorBgHover","InnerConsult","WrapperOverHidden","WrapperText","WrapperImgPos","WrapperFlex","ArrowConsult","ImgConsult","InnerProduct","IntroWrapper","NameBox","ImgProduct","CostProduct","main","PdfFileLink","PdfFileIcon","WrapperDescrip","full","isOpen","SpanDesrip","ListCharacter","ItemCharacter","OptionList","isWhite","black","OptionItem","OptionText","isBold","isCenter","WrapperShemaItems","ImgShema","ItemElement","ElementImage","WrapperOptionEl","VideoList","VideoItem","VideoFrame","DescripImgList","DescripImgItem","DescripImg","useWindowWidth","typeProduct","useParams","useSearchParams","searchParams","id","get","useState","product","setProduct","isLoading","setIsLoading","isShowModal","setGood","useBasket","descripRef","useRef","value","descripHight","setDescripHight","current","offsetHeight","prevState","fetchProduct","data","undefined","getByIdStoreSet","getByIdStoreComponent","result","catch","err","console","log","GoogleAnalyticsWrapper","LoadPage","baseURL","photo","title","JSON","parse","optionSort","subtype","material","numbersFormatCost","cost","nameGood","pdfUrl","href","target","iconPdfFile","ref","descripMain","descripCharacter","map","item","index","subtitle","option","iOption","trim","descripPhoto","components","image","indexOption","descripPhotos","urlPhoto","youtubeUrl","idVideo","frameborder","allow","allowfullscreen","number","numberString","String","formattedNumber","group","i","unshift","join"],"sourceRoot":""}