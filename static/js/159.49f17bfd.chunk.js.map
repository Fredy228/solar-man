{"version":3,"file":"static/js/159.49f17bfd.chunk.js","mappings":"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","sources":["adminPage/StoreDB/ListProduct/ListProduct.styled.jsx","adminPage/StoreDB/NavStoreDB/NavStoreDB.styled.jsx","adminPage/StoreDB/NavStoreDB/NavStoreDB.jsx","adminPage/StoreDB/ListProduct/ListProduct.jsx","adminPage/StoreDB/StoreDB.jsx","components/DeleteWindow/DeleteWindow.styled.jsx","components/DeleteWindow/DeleteWindow.jsx","components/ListGoods/ListTableProduct.styled.jsx","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","services/numbersFormatCost.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Inner = styled.div``;\n","import styled from 'styled-components';\n\nexport const Inner = styled.div`\n  width: 100%;\n  margin-top: 20px;\n`;\n\nexport const ListNav = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: ${({ theme }) => theme.color.main};\n  border-radius: 10px;\n  padding: 10px;\n`;\nexport const ItemNav = styled.li`\n  display: flex;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: column;\n  }\n\n  @media screen and (min-width: 1200px) {\n    flex-direction: row;\n  }\n`;\n\nexport const Select = styled.select`\n  width: 170px;\n  height: 25px;\n  border-radius: 10px;\n  text-align: center;\n  color: ${({ theme }) => theme.color.white};\n  background-color: ${({ theme }) => theme.color.additional};\n  font-family: inherit;\n  font-weight: inherit;\n  font-size: 14px;\n  border-color: transparent;\n  cursor: pointer;\n  outline: transparent;\n  transition: border-color 350ms ease;\n\n  :hover,\n  :focus {\n    border-color: ${({ theme }) => theme.color.white};\n  }\n`;\n\nexport const Option = styled.option``;\n\nexport const Text = styled.p`\n  color: ${({ theme }) => theme.color.white};\n  margin-right: 10px;\n  @media screen and (max-width: 1199px) {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 170px;\n  height: 25px;\n  border-radius: 10px;\n  background-color: ${({ theme }) => theme.color.white};\n  cursor: pointer;\n  transition-duration: 350ms;\n  transition-timing-function: ease;\n  transition-property: background-color, color;\n\n  :hover {\n    background-color: ${({ theme }) => theme.color.additional};\n    color: ${({ theme }) => theme.color.white};\n  }\n`;\n\nexport const OrderBtn = styled(Button)`\n  position: fixed;\n  top: 200px;\n  left: -70px;\n  rotate: 90deg;\n  border: 1px solid ${({ theme }) => theme.color.additional};\n`;\n","import {\n  Button,\n  Inner,\n  ItemNav,\n  ListNav,\n  Option,\n  OrderBtn,\n  Select,\n  Text,\n} from './NavStoreDB.styled';\nimport { useState } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { useStoreUser } from '../../../globalState/globalState';\n\nexport const NavStoreDB = ({ isLoading }) => {\n  const {\n    userData: { role },\n  } = useStoreUser();\n  const navigate = useNavigate();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const typeParams = searchParams.get('type');\n  const subtypeParams = searchParams.get('subtype');\n  const sortParams = searchParams.get('sort');\n\n  const [type, setType] = useState(typeParams || 'Готові рішення');\n  const [subtype, setSubtype] = useState(subtypeParams || 'Всі');\n  const [sort, setSort] = useState(sortParams || 'none');\n\n  const handleCreate = () => {\n    navigate(`${type}`);\n  };\n  const handleType = e => {\n    setType(e.target.value);\n    setSubtype('Всі');\n\n    setSearchParams(prevSearchParams => {\n      const newSearchParams = new URLSearchParams(prevSearchParams);\n      newSearchParams.set('subtype', 'Всі');\n      newSearchParams.set('sort', 'none');\n      newSearchParams.set('page', '1');\n      newSearchParams.set('type', e.target.value);\n      return newSearchParams;\n    });\n  };\n\n  const handleSort = e => {\n    setSort(e.target.value);\n    setSearchParams(prevSearchParams => {\n      const newSearchParams = new URLSearchParams(prevSearchParams);\n      newSearchParams.set('sort', e.target.value);\n      newSearchParams.set('page', '1');\n      return newSearchParams;\n    });\n  };\n\n  const handleSubtype = e => {\n    setSubtype(e.target.value);\n    setSort('none');\n    setSearchParams(prevSearchParams => {\n      const newSearchParams = new URLSearchParams(prevSearchParams);\n      newSearchParams.set('sort', 'none');\n      newSearchParams.set('page', '1');\n      newSearchParams.set('subtype', e.target.value);\n      return newSearchParams;\n    });\n  };\n\n  return (\n    <>\n      <OrderBtn\n        type={'button'}\n        disabled={role === 'user'}\n        onClick={() => navigate(`home/order`)}\n      >\n        Home page\n      </OrderBtn>\n      <Inner>\n        <ListNav>\n          <ItemNav>\n            <Button\n              type={'button'}\n              onClick={handleCreate}\n              disabled={role === 'user'}\n            >\n              + Створити\n            </Button>\n          </ItemNav>\n          <ItemNav>\n            <Text>Тип:</Text>\n            <Select\n              name=\"type\"\n              value={type}\n              onChange={handleType}\n              disabled={isLoading}\n            >\n              <Option value=\"Готові рішення\">Готові рішення</Option>\n              <Option value=\"Компоненти\">Компоненти</Option>\n            </Select>\n          </ItemNav>\n          <ItemNav>\n            <Text>Підтип:</Text>\n            <Select\n              name=\"subtype\"\n              value={subtype}\n              onChange={handleSubtype}\n              disabled={isLoading}\n            >\n              <Option value=\"Всі\">Всі</Option>\n              {type === 'Готові рішення' ? (\n                <>\n                  <Option value=\"Зелений тариф\">Зелений тариф</Option>\n                  <Option value=\"Автономні станції\">Автономні станції</Option>\n                  <Option value=\"Резервне живлення\">Резервне живлення</Option>\n                  <Option value=\"Гібридні безперебійні системи\">\n                    Гібридні безперебійні системи\n                  </Option>\n                  <Option value=\"Для підприємств\">Для підприємств</Option>\n                </>\n              ) : (\n                <>\n                  <Option value=\"Панелі\">Панелі</Option>\n                  <Option value=\"Інвертори\">Інвертори</Option>\n                  <Option value=\"Акумулятори\">Акумулятори</Option>\n                  <Option value=\"Кріплення\">Кріплення</Option>\n                  <Option value=\"Комлпектуючі\">Комлпектуючі</Option>\n                  <Option value=\"Зарядні станції\">Зарядні станції</Option>\n                </>\n              )}\n            </Select>\n          </ItemNav>\n          <ItemNav>\n            <Text>Сортування:</Text>\n            <Select\n              onChange={handleSort}\n              value={sort}\n              name=\"sort\"\n              disabled={isLoading}\n            >\n              <Option value=\"none\">За замовчуванням</Option>\n              <Option value=\"cost-up\">Від дешевих</Option>\n              <Option value=\"cost-down\">Від дорогих</Option>\n              {type === 'Готові рішення' && (\n                <>\n                  <Option value=\"power-up\">Від менш потужних</Option>\n                  <Option value=\"power-down\">Від більш потужних</Option>\n                </>\n              )}\n\n              {['Панелі', 'Інвертори'].includes(subtype) && (\n                <>\n                  <Option value=\"c-power-up\">Від менш потужних-</Option>\n                  <Option value=\"c-power-down\">Від більш потужних-</Option>\n                </>\n              )}\n\n              {['Акумулятори'].includes(subtype) && (\n                <>\n                  <Option value=\"с-voltage-up\">Від менш потужних</Option>\n                  <Option value=\"с-voltage-down\">Від більш потужних</Option>\n                  <Option value=\"с-reservoir-up\">Від менш ємких</Option>\n                  <Option value=\"с-reservoir-down\">Від більш ємких</Option>\n                </>\n              )}\n            </Select>\n          </ItemNav>\n        </ListNav>\n      </Inner>\n    </>\n  );\n};\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Inner } from './ListProduct.styled';\nimport {\n  BoxBtnProducts,\n  ButtonProducts,\n  CostProduts,\n  ImgProduts,\n  ItemProduts,\n  ItemProdutsLink,\n  ListProduts,\n  TitleProduts,\n  WrapperImgProducts,\n} from '../../../components/ListGoods/ListTableProduct.styled';\nimport {\n  baseURL,\n  deleteStoreComponent,\n  deleteStoreSet,\n  toggleSetsHome,\n} from '../../../components/API/API';\nimport { Icon } from '../../../components/Icon/Icon';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useShowModal, useStoreUser } from '../../../globalState/globalState';\nimport { Modal } from '../../../components/Modal/Modal';\nimport { DeleteWindow } from '../../../components/DeleteWindow/DeleteWindow';\nimport { numbersFormatCost } from '../../../services/numbersFormatCost';\n\nexport const ListProduct = ({ products, setProducts, type }) => {\n  const {\n    userData: { role },\n  } = useStoreUser();\n  const [isShowBtn, setIsShowBtn] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const { isShowModal, toggleModal } = useShowModal();\n  const [idGood, setIdGood] = useState('');\n\n  const fnDeleteProd = async id => {\n    try {\n      let data;\n\n      if (type === 'Готові рішення') data = await deleteStoreSet(id);\n\n      if (type === 'Компоненти') data = await deleteStoreComponent(id);\n\n      if (!data) return setIsLoading(false);\n\n      setProducts(prev => {\n        const newResult = prev.result.filter(item => item.id !== data.result);\n        return { result: newResult, count: prev.count - 1 };\n      });\n      Notify.success('Видалено');\n      toggleModal(false);\n    } catch (err) {\n      if (err.response.status === 401)\n        return Notify.failure(\n          'Неавторизовано, ваша сесія закінчилася або невірний токен'\n        );\n      Notify.failure(`Щось пішло не так, помилка: ${err.response.status}`);\n    }\n  };\n\n  const toggleHomeSetsInOrder = async (id, isInHome) => {\n    try {\n      setIsLoading(true);\n      await toggleSetsHome(id);\n\n      setProducts(prev => {\n        const newResult = prev.result.map(item => {\n          if (item.id === id) {\n            const parse = JSON.parse(item.home);\n            parse.value = !isInHome;\n            const stringify = JSON.stringify(parse);\n            console.log(parse);\n            return { ...item, home: stringify };\n          } else {\n            return item;\n          }\n        });\n\n        return { result: newResult, count: prev.count };\n      });\n\n      setIsLoading(false);\n    } catch (err) {\n      setIsLoading(false);\n      if (err.response.status === 401)\n        return Notify.failure(\n          'Неавторизовано, ваша сесія закінчилася або невірний токен'\n        );\n      Notify.failure(`Щось пішло не так, помилка: ${err.response.status}`);\n    }\n  };\n\n  return (\n    <Inner>\n      <ListProduts>\n        {products.result &&\n          products.result.map(item => (\n            <ItemProduts\n              key={item.id}\n              flex={['3', '3', '4']}\n              onMouseEnter={() => setIsShowBtn(item.id)}\n              onMouseLeave={() => setIsShowBtn('')}\n            >\n              {isShowBtn === item.id && role !== 'user' && (\n                <BoxBtnProducts>\n                  {type === 'Готові рішення' && (\n                    <ButtonProducts\n                      type={'button'}\n                      onClick={() =>\n                        toggleHomeSetsInOrder(\n                          item.id,\n                          JSON.parse(item.home).value\n                        )\n                      }\n                      disabled={isLoading}\n                    >\n                      {JSON.parse(item.home).value ? (\n                        <Icon name={'icon-home'} />\n                      ) : (\n                        <Icon name={'icon-plus'} />\n                      )}\n                    </ButtonProducts>\n                  )}\n\n                  <ButtonProducts\n                    type={'button'}\n                    onClick={() => {\n                      toggleModal(true);\n                      setIdGood(item.id);\n                    }}\n                    disabled={isLoading}\n                  >\n                    <Icon name={'icon-delete'} />\n                  </ButtonProducts>\n                  <ButtonProducts\n                    type={'button'}\n                    onClick={() => navigate(`${type}?id-product=${item.id}`)}\n                  >\n                    <Icon name={'icon-pencil'} />\n                  </ButtonProducts>\n                </BoxBtnProducts>\n              )}\n              <ItemProdutsLink\n                to={`/store/${\n                  type === 'Готові рішення' ? 'set' : 'component'\n                }?id=${item.id}`}\n                onClick={() => {\n                  window.scrollTo(0, 0);\n                }}\n              >\n                <WrapperImgProducts>\n                  <ImgProduts\n                    src={`${baseURL}/${item.photo}`}\n                    alt={item.title}\n                  />\n                </WrapperImgProducts>\n                <TitleProduts>{item.title}</TitleProduts>\n                <CostProduts>\n                  <Icon name=\"icon-cart-buy\" />\n                  {numbersFormatCost(item.cost)}$\n                </CostProduts>\n              </ItemProdutsLink>\n            </ItemProduts>\n          ))}\n        {isShowModal && (\n          <Modal>\n            <DeleteWindow fn={fnDeleteProd} id={idGood} />\n          </Modal>\n        )}\n      </ListProduts>\n    </Inner>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { NavStoreDB } from './NavStoreDB/NavStoreDB';\nimport { Container } from '../../pages/Common.styled';\nimport { getStoreComponents, getStoreSets } from '../../components/API/API';\nimport { ListProduct } from './ListProduct/ListProduct';\nimport useWindowWidth from '../../services/widthScreen';\nimport Pagination from '../../components/Pagination/Pagination';\n\nconst initialFilter = {\n  brand: [],\n  country: [],\n  subtype: [],\n  power: [],\n  material: [],\n  reservoir: [],\n  voltage: [],\n  phases: [],\n};\n\nconst StoreDB = () => {\n  const [searchParams] = useSearchParams();\n  const pageParams = searchParams.get('page');\n  const typeParams = searchParams.get('type');\n  const subtypeParams = searchParams.get('subtype');\n  const sortParams = searchParams.get('sort');\n  const [products, setProducts] = useState([]);\n  const width = useWindowWidth();\n  const [isLoading, setIsLoading] = useState(true);\n  const limit = 12;\n\n  useEffect(() => {\n    const fetchProducts = async () => {\n      setIsLoading(true);\n\n      const type = typeParams || 'Готові рішення';\n      const page = Number(pageParams) || 1;\n      const subtype = subtypeParams || 'Всі';\n      const sort = sortParams || 'none';\n\n      if (!type || !page || !subtype || !sort) return setIsLoading(false);\n\n      try {\n        let data;\n\n        if (type === 'Готові рішення')\n          data = await getStoreSets(page, limit, subtype, sort);\n\n        if (type === 'Компоненти')\n          data = await getStoreComponents(\n            page,\n            limit,\n            subtype,\n            sort,\n            initialFilter\n          );\n\n        setProducts(data);\n        setIsLoading(false);\n      } catch (error) {\n        setProducts([]);\n        setIsLoading(false);\n      }\n\n      setIsLoading(false);\n    };\n\n    fetchProducts().catch(err => console.log(err));\n  }, [pageParams, typeParams, sortParams, subtypeParams]);\n\n  return (\n    <>\n      {width > 769 ? (\n        <Container>\n          <NavStoreDB isLoading={isLoading} />\n          <ListProduct\n            products={products}\n            setProducts={setProducts}\n            type={typeParams || 'Готові рішення'}\n          />\n          {products.count / limit > 1 && (\n            <Pagination limit={limit} count={products.count} />\n          )}\n        </Container>\n      ) : (\n        <p style={{ textAlign: 'center', fontSize: '18px', padding: '20px' }}>\n          Ця панель може будти використована на екранах шириною більше ніж 770px\n        </p>\n      )}\n    </>\n  );\n};\n\nexport default StoreDB;\n","import styled from 'styled-components';\n\nexport const WindowBox = styled.div`\n  max-width: 300px;\n  width: 100%;\n  padding: 30px;\n  background-color: ${({ theme }) => theme.color.white};\n  border-radius: 20px;\n`;\n\nexport const Text = styled.p`\n  text-align: center;\n  font-size: 18px;\n  margin-bottom: 15px;\n`;\n\nexport const WrapperBtn = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0 15px;\n  height: 30px;\n  border-radius: 30px;\n  margin-top: 10px;\n  cursor: pointer;\n  background-color: ${({ theme }) => theme.color.main};\n  color: ${({ theme }) => theme.color.white};\n  transition-duration: 350ms;\n  transition-timing-function: ease;\n  transition-property: color, background-color;\n\n  :not(:last-child) {\n    margin-right: 15px;\n  }\n\n  svg {\n    width: 20px;\n    height: 20px;\n    margin-right: 3px;\n    fill: ${({ theme }) => theme.color.white};\n    transition: fill 350ms ease;\n  }\n\n  :hover {\n    background-color: ${({ theme }) => theme.color.additional};\n  }\n`;\n","import { Button, Text, WindowBox, WrapperBtn } from './DeleteWindow.styled';\nimport { Icon } from '../Icon/Icon';\n\nexport const DeleteWindow = ({ fn, id, url }) => {\n  return (\n    <WindowBox>\n      <Text>Точно хочете видалити?</Text>\n      <WrapperBtn>\n        <Button\n          type={'button'}\n          onClick={() => {\n            fn(id, url);\n          }}\n        >\n          <Icon name=\"icon-delete\" />\n          Видалити\n        </Button>\n      </WrapperBtn>\n    </WindowBox>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const ListProduts = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n\n  @media screen and (max-width: 767px) {\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    margin-top: 15px;\n  }\n`;\n\nexport const TitleProduts = styled.p`\n  margin-bottom: 20px;\n  padding: 0 10px;\n  color: ${({ theme }) => theme.color.g2};\n  transition: color 350ms ease;\n  margin-top: 15px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 1000px) {\n    font-size: 16px;\n  }\n`;\n\nexport const ItemProduts = styled.li`\n  position: relative;\n\n  overflow: hidden;\n  cursor: pointer;\n\n  :hover ${TitleProduts} {\n    color: ${({ theme }) => theme.color.second};\n  }\n\n  @media screen and (max-width: 767px) {\n    max-width: 280px;\n    margin-bottom: 15px;\n    align-items: center;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin: calc(20px / 2);\n    flex-basis: calc(100% / ${({ flex }) => flex[0]} - 20px);\n  }\n\n  @media screen and (min-width: 1000px) {\n    margin: calc(30px / 2);\n    flex-basis: calc(100% / ${({ flex }) => flex[1]} - 30px);\n  }\n\n  @media screen and (min-width: 1200px) {\n    margin: calc(30px / 2);\n    flex-basis: calc(100% / ${({ flex }) => flex[2]} - 30px);\n  }\n`;\n\nexport const ItemProdutsLink = styled(NavLink)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  height: 100%;\n`;\n\nexport const WrapperImgProducts = styled.div`\n  width: 100%;\n  height: 320px;\n  overflow-y: hidden;\n  display: flex;\n  align-items: center;\n  border-radius: 10px;\n`;\n\nexport const ImgProduts = styled.img`\n  width: 100%;\n`;\n\nexport const PowerSpan = styled.span`\n  font-size: 14px;\n  width: 80px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 25px;\n  margin: 15px auto 0 auto;\n  background-color: ${({ theme }) => theme.color.second};\n  color: ${({ theme }) => theme.color.white};\n\n  @media screen and (max-width: 1199px) and (min-width: 767px) {\n    font-size: 12px;\n    width: 70px;\n    height: 25px;\n  }\n`;\n\nexport const CostProduts = styled.button`\n  color: ${({ theme }) => theme.color.g2};\n  padding: 7px 20px;\n  margin-bottom: 15px;\n  margin-top: auto;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: transparent;\n  font-size: 18px;\n\n  svg {\n    width: 20px;\n    height: 20px;\n    margin-right: 7px;\n    fill: ${({ theme }) => theme.color.second};\n    transition: stroke 350ms ease;\n  }\n`;\n\nexport const BoxBtnProducts = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  padding: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ButtonProducts = styled.button`\n  width: 35px;\n  height: 35px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: 10px;\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.color.additional};\n  cursor: pointer;\n  box-shadow: rgba(0, 0, 0, 0.24) 0 3px 8px;\n  transition: background-color 350ms ease;\n\n  :hover {\n    background-color: ${({ theme }) => theme.color.main};\n  }\n\n  svg {\n    width: 30px;\n    height: 30px;\n    fill: ${({ theme }) => theme.color.white};\n    stroke: ${({ theme }) => theme.color.white};\n  }\n`;\n\nexport const NotFoundText = styled.div`\n  width: 100%;\n  height: 150px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 18px;\n`;\n","import styled from 'styled-components';\nimport ReactPaginate from 'react-paginate';\n\nexport const ReactPaginateStyled = styled(ReactPaginate)`\n  margin-left: auto;\n  margin-right: auto;\n  align-items: center;\n  justify-content: center;\n  display: inline-flex;\n  flex-direction: row;\n  height: 52px;\n  gap: 7px;\n  padding-left: 12px;\n  padding-right: 12px;\n  box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n  border-radius: 45px;\n\n  .paginationLink {\n    display: flex;\n    width: 35px;\n    height: 35px;\n    border-radius: 50%;\n    align-items: center;\n    justify-content: center;\n    background-color: ${({ theme }) => theme.color.white};\n    cursor: pointer;\n    font-size: 16px;\n    line-height: 0.94;\n    color: ${({ theme }) => theme.color.main};\n    transition-property: background-color, color;\n    transition-duration: 350ms;\n    transition-timing-function: ease;\n\n    &:hover {\n      background-color: ${({ theme }) => theme.color.main};\n      color: ${({ theme }) => theme.color.white};\n    }\n  }\n\n  .paginationActiveLink {\n    display: flex;\n    width: 35px;\n    height: 35px;\n    border-radius: 50%;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n    font-size: 16px;\n    line-height: 1;\n    color: ${({ theme }) => theme.color.white};\n    background-color: ${({ theme }) => theme.color.second};\n\n    :hover {\n      background-color: ${({ theme }) => theme.color.second};\n    }\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 30px;\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  width: 100%;\n  height: 100%;\n  background-color: ${({ theme }) => theme.color.g200};\n  border-radius: 50%;\n\n  svg {\n    width: 25px;\n    height: 25px;\n    stroke: ${({ theme }) => theme.color.main};\n  }\n\n  :hover {\n    background-color: transparent;\n\n    svg {\n      stroke: ${({ theme }) => theme.color.white};\n    }\n  }\n`;\n","import { useSearchParams } from 'react-router-dom';\nimport { BtnWrapper, Wrapper, ReactPaginateStyled } from './Pagination.styled';\nimport { Icon } from '../Icon/Icon';\n\nconst Pagination = ({ count, limit }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const page = searchParams.get('page');\n\n  const checkCount = () => {\n    if (count && limit && Number(count) > Number(limit)) {\n      return Number(count) / Number(limit);\n    }\n    if (count && Number(count) > 12) {\n      return Number(count) / 12;\n    }\n    return 1;\n  };\n\n  const checkPage = () => {\n    if (page > 1) {\n      return page - 1;\n    }\n    return 0;\n  };\n\n  const handlePageChange = selectedPage => {\n    const newPage = Number(selectedPage.selected) + 1;\n\n    setSearchParams(prevSearchParams => {\n      const newSearchParams = new URLSearchParams(prevSearchParams);\n      newSearchParams.set('page', String(newPage));\n      return newSearchParams;\n    });\n\n    window.scrollTo(0, 80);\n  };\n\n  const rightArrow = (\n    <BtnWrapper style={{ transform: 'rotate(180deg)' }}>\n      <Icon name={'icon-arrow'} />\n    </BtnWrapper>\n  );\n\n  const leftArrow = (\n    <BtnWrapper>\n      <Icon name={'icon-arrow'} />\n    </BtnWrapper>\n  );\n\n  return (\n    <Wrapper>\n      <ReactPaginateStyled\n        pageCount={Math.ceil(checkCount())}\n        previousLabel={leftArrow}\n        nextLabel={rightArrow}\n        breakLabel={''}\n        containerClassName={'pagination'}\n        previousLinkClassName={'paginationLink'}\n        nextLinkClassName={'paginationLink'}\n        pageLinkClassName={'paginationLink'}\n        activeLinkClassName={'paginationActiveLink'}\n        disableInitialCallback={true}\n        forcePage={checkPage()}\n        onPageChange={handlePageChange}\n        marginPagesDisplayed={0}\n        pageRangeDisplayed={4}\n      />\n    </Wrapper>\n  );\n};\n\nexport default Pagination;\n","export const numbersFormatCost = number => {\n  const numberString = String(number);\n  const formattedNumber = [];\n  let group = '';\n\n  for (let i = numberString.length - 1; i >= 0; i--) {\n    group = numberString[i] + group;\n    if (group.length === 3 || i === 0) {\n      formattedNumber.unshift(group);\n      group = '';\n    }\n  }\n\n  return formattedNumber.join(' ');\n};\n"],"names":["Inner","styled","ListNav","theme","color","main","ItemNav","Select","white","additional","Option","Text","Button","OrderBtn","NavStoreDB","isLoading","role","useStoreUser","userData","navigate","useNavigate","useSearchParams","searchParams","setSearchParams","typeParams","get","subtypeParams","sortParams","useState","type","setType","subtype","setSubtype","sort","setSort","disabled","onClick","name","value","onChange","e","target","prevSearchParams","newSearchParams","URLSearchParams","set","includes","ListProduct","products","setProducts","isShowBtn","setIsShowBtn","setIsLoading","useShowModal","isShowModal","toggleModal","idGood","setIdGood","fnDeleteProd","id","deleteStoreSet","data","deleteStoreComponent","prev","result","filter","item","count","Notify","response","status","toggleHomeSetsInOrder","isInHome","toggleSetsHome","map","parse","JSON","home","stringify","console","log","flex","onMouseEnter","onMouseLeave","Icon","to","window","scrollTo","src","baseURL","photo","alt","title","numbersFormatCost","cost","Modal","DeleteWindow","fn","initialFilter","brand","country","power","material","reservoir","voltage","phases","pageParams","width","useWindowWidth","useEffect","fetchProducts","page","Number","getStoreSets","getStoreComponents","catch","err","Pagination","limit","style","textAlign","fontSize","padding","WindowBox","WrapperBtn","url","ListProduts","TitleProduts","g2","ItemProduts","second","ItemProdutsLink","NavLink","WrapperImgProducts","ImgProduts","PowerSpan","CostProduts","BoxBtnProducts","ButtonProducts","NotFoundText","ReactPaginateStyled","ReactPaginate","Wrapper","BtnWrapper","g200","rightArrow","transform","leftArrow","pageCount","Math","ceil","previousLabel","nextLabel","breakLabel","containerClassName","previousLinkClassName","nextLinkClassName","pageLinkClassName","activeLinkClassName","disableInitialCallback","forcePage","onPageChange","selectedPage","newPage","selected","String","marginPagesDisplayed","pageRangeDisplayed","number","numberString","formattedNumber","group","i","length","unshift","join"],"sourceRoot":""}