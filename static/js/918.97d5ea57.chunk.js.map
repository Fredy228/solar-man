{"version":3,"file":"static/js/918.97d5ea57.chunk.js","mappings":"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","sources":["components/CalcStation/CalcStation.styled.jsx","components/GoogleAnalyticsWrapper/GoogleAnalyticsWrapper.jsx","pages/Quiz/Quiz.styled.jsx","components/QuizParts/QuizBar/QuizBar.styled.jsx","components/QuizParts/QuizBar/QuizBar.jsx","components/QuizParts/QuizNav/QuizNav.styled.jsx","components/QuizParts/QuizNav/QuizNav.jsx","components/QuizParts/QuizBody/QuizBody.styled.jsx","components/QuizParts/QuizBody/QuizBodyOne/QuizBodyOne.styled.jsx","components/QuizParts/QuizBody/QuizBodyOne/QuizBodyOne.jsx","components/QuizParts/QuizBody/QuizBodyTwo/QuizBodyTwo.styled.jsx","components/QuizParts/QuizBody/QuizBodyTwo/QuizBodyTwo.jsx","components/QuizParts/QuizBody/QuizBodyTree/QuizBodyTree.styled.jsx","components/QuizParts/QuizBody/QuizBodyTree/QuizBodyTree.jsx","components/QuizParts/QuizBody/QuizBodyFour/QuizBodyFour.styled.jsx","components/QuizParts/QuizBody/QuizBodyFour/QuizBodyFour.jsx","components/QuizParts/QuizBody/QuizBodyFive/QuizBodyFive.styled.jsx","components/QuizParts/QuizBody/QuizBodyFive/QuizBodyFive.jsx","components/QuizParts/QuizStart/QuizStart.styled.jsx","components/QuizParts/QuizStart/QuizStart.jsx","pages/Quiz/Quiz.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { ButtonOrg } from '../../CommonStyle/ButtonCommon.styled';\n\nexport const StationInner = styled.section`\n  padding: 50px 0;\n  position: relative;\n  display: flex;\n\n  @media screen and (max-width: 999px) {\n    padding: 25px 0;\n  }\n\n  @media screen and (max-width: 767px) {\n    flex-direction: column;\n  }\n`;\n\nexport const WrapperTitle = styled.div``;\n\nexport const WrapperSlider = styled.div`\n  flex: 1;\n`;\n\nexport const SubTextSlider = styled.p`\n  color: #6b7280;\n  font-size: 16px;\n  text-align: center;\n  margin-top: 30px;\n\n  @media screen and (max-width: 767px) {\n    margin: 230px auto 0 auto;\n    max-width: 200px;\n  }\n`;\n\nexport const SliderBox = styled.div`\n  max-width: 700px;\n  margin: 25px auto 0 auto;\n\n  @media screen and (max-width: 1199px) {\n    margin: 25px 50px 0 50px;\n  }\n\n  @media screen and (max-width: 767px) {\n    margin: 25px 25px 0 25px;\n  }\n`;\n\nexport const OutputSlider = styled.output`\n  font-weight: bold;\n  position: absolute;\n  display: block;\n  top: 55px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: ${({ widthValue }) => (widthValue ? widthValue : '85px')};\n  text-align: center;\n  padding: 5px 0;\n  font-size: 16px;\n  border-radius: 15px;\n  background: ${({ theme }) => theme.color.second};\n  color: ${({ theme }) => theme.color.white};\n`;\n\nexport const StationImg = styled.img`\n  margin: 0 auto;\n  height: auto;\n  width: 700px;\n  bottom: 0;\n  left: -200px;\n  position: absolute;\n  z-index: -1;\n\n  @media screen and (max-width: 1199px) {\n    width: 600px;\n    left: -150px;\n  }\n\n  @media screen and (max-width: 767px) {\n    top: 80px;\n    width: 550px;\n    right: 0;\n    left: initial;\n    transform: translateX(30px);\n  }\n`;\n\nexport const ListResult = styled.ul`\n  display: flex;\n  padding: 5px;\n  margin: 80px auto 40px auto;\n  gap: 20px;\n  justify-content: center;\n\n  @media screen and (max-width: 999px) {\n    flex-wrap: wrap;\n  }\n\n  @media screen and (max-width: 767px) {\n    gap: 5px;\n    margin-top: 60px;\n  }\n`;\n\nexport const ItemResult = styled.li`\n  padding: 20px 20px;\n  width: 180px;\n  //height: 100px;\n  background-color: ${({ theme: { color } }) => color.white};\n  color: ${({ theme: { color } }) => color.g500};\n  border: 1px solid ${({ theme }) => theme.color.main};\n  border-radius: 10px;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: start;\n\n  :first-child {\n    background-color: ${({ theme: { color } }) => color.main};\n    outline: 2px solid ${({ theme }) => theme.color.white};\n\n    p {\n      color: ${({ theme: { color } }) => color.white};\n    }\n\n    span {\n      color: ${({ theme: { color } }) => color.second};\n    }\n  }\n\n  span {\n    color: ${({ theme }) => theme.color.main};\n    font-size: 28px;\n    font-weight: bold;\n  }\n\n  @media screen and (max-width: 1199px) {\n    width: 150px;\n    //height: 80px;\n    padding: 15px 15px;\n\n    span {\n      font-size: 22px;\n    }\n  }\n\n  @media screen and (max-width: 767px) {\n    flex: 1;\n    min-width: 139px;\n    height: 90px;\n    padding: 5px 10px;\n  }\n`;\n\nexport const TextResult = styled.p`\n  font-size: 16px;\n  text-align: left;\n  margin-bottom: 5px;\n\n  @media screen and (max-width: 1199px) {\n    font-size: 14px;\n  }\n`;\n\nexport const CalcInput = styled.input`\n  width: 100%;\n  text-align: center;\n  font-size: 22px;\n  color: ${({ theme }) => theme.color.main};\n  border: 1px solid ${({ theme }) => theme.color.main};\n  border-radius: 4px;\n  outline: transparent;\n\n  &:focus {\n    border-color: ${({ theme }) => theme.color.second};\n  }\n`;\n\nexport const ButtonGetCall = styled(ButtonOrg)`\n  margin: 0 auto;\n`;\n","import React, { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst GoogleAnalyticsWrapper = ({ children }) => {\n  const location = useLocation();\n\n  useEffect(() => {\n    if (process.env.NODE_ENV === 'development') return;\n\n    // Отправка события отслеживания страницы Google Analytics при каждом переходе на новую страницу\n    window.gtag('config', 'G-XFN527HLQ5', {\n      page_path: location.pathname,\n    });\n  }, [location]);\n\n  return <>{children}</>;\n};\n\nexport default GoogleAnalyticsWrapper;\n","import styled from 'styled-components';\nimport { Container } from '../Common.styled';\n\nexport const InnerQuiz = styled.div`\n  background: radial-gradient(\n    186.93% 102.34% at 81.46% 7.95%,\n    #fff8de 0%,\n    #dceeff 100%\n  );\n  width: 100%;\n  min-height: calc(100vh - 100px);\n  padding-top: 70px;\n  padding-bottom: 80px;\n\n  @media screen and (max-width: 767px) {\n    background: radial-gradient(\n      374.96% 191.73% at 277.2% 1.34%,\n      #fff8de 0%,\n      #dceeff 100%\n    );\n    padding-top: 100px;\n  }\n`;\n\nexport const WrapperQuiz = styled(Container)`\n  height: auto;\n  padding-top: 70px;\n`;\n\nexport const TitleQuiz = styled.h1`\n  text-transform: uppercase;\n  font-size: 38px;\n  line-height: 1.3;\n  color: ${({ theme }) => theme.color.main};\n  text-align: ${({ textAlign }) => (textAlign ? textAlign : 'center')};\n  margin-bottom: 32px;\n\n  @media screen and (max-width: 999px) {\n    font-size: 32px;\n  }\n\n  @media screen and (max-width: 767px) {\n    margin-bottom: 22px;\n  }\n`;\n","import styled, { css } from 'styled-components';\n\nexport const QuizBarInner = styled.div`\n  width: 100%;\n  display: flex;\n  padding: 0 180px;\n  margin-bottom: 30px;\n\n  @media screen and (max-width: 999px) {\n    padding: 0 20px;\n  }\n\n  @media screen and (max-width: 767px) {\n    flex-direction: column-reverse;\n    margin-bottom: 0;\n  }\n`;\n\nexport const QuizCurrentBox = styled.div`\n  display: flex;\n  align-items: center;\n  flex: 1;\n`;\n\nexport const QuizStepsBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding-left: 100px;\n\n  @media screen and (max-width: 999px) {\n    padding-left: 20px;\n  }\n\n  @media screen and (max-width: 767px) {\n    padding-left: 0;\n  }\n`;\n\nexport const NumberQuestion = styled.span`\n  font-size: 150px;\n  line-height: 0.8;\n  font-weight: bold;\n  -webkit-text-fill-color: transparent;\n  -webkit-text-stroke: 2px ${({ theme }) => theme.color.second};\n  color: ${({ theme }) => theme.color.second};\n  font-family: 'Poppins', sans-serif;\n  margin-right: 30px;\n\n  @media screen and (max-width: 767px) {\n    line-height: 1.1;\n    font-size: 120px;\n  }\n`;\nexport const QuestionName = styled.h2`\n  color: ${({ theme }) => theme.color.main};\n  text-transform: uppercase;\n  font-size: 21px;\n`;\n\nexport const TitleSpanStep = styled.p`\n  margin-bottom: 6px;\n  font-size: 20px;\n`;\n\nexport const WrapperSpanStep = styled.div`\n  display: flex;\n`;\n\nexport const SpanStep = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  font-size: 16px;\n  background-color: ${({ theme }) => theme.color.white};\n  color: ${({ theme }) => theme.color.g1};\n  border: 1px solid #cbced4;\n  font-weight: 600;\n  position: relative;\n\n  :not(:last-child) {\n    margin-right: 30px;\n  }\n\n  :not(:first-child):before {\n    position: absolute;\n    content: '';\n    height: 8px;\n    width: 32px;\n    background-color: #cbced4;\n    top: 50%;\n    right: 34px;\n    transform: translateY(-50%);\n  }\n\n  ${({ current }) => css`\n    :not(:first-child):nth-child(-n + ${current}) {\n      :before {\n        background-color: ${({ theme }) => theme.color.second};\n      }\n    }\n    :nth-child(-n + ${current}) {\n      background-color: ${({ theme }) => theme.color.second};\n      color: ${({ theme }) => theme.color.white};\n      border: 1px solid ${({ theme }) => theme.color.second};\n    }\n  `}\n`;\n","import {\n  NumberQuestion,\n  QuestionName,\n  QuizBarInner,\n  QuizCurrentBox,\n  QuizStepsBox,\n  SpanStep,\n  TitleSpanStep,\n  WrapperSpanStep,\n} from './QuizBar.styled';\n\nexport const QuizBar = ({ currentQuestion, nameQuestion, questions }) => {\n  return (\n    <QuizBarInner>\n      <QuizCurrentBox>\n        <NumberQuestion>{currentQuestion}</NumberQuestion>\n        <QuestionName>{nameQuestion}</QuestionName>\n      </QuizCurrentBox>\n      <QuizStepsBox>\n        <TitleSpanStep>Питання</TitleSpanStep>\n        <WrapperSpanStep>\n          {questions.map(i => (\n            <SpanStep key={i.id} current={currentQuestion}>\n              {i.id}\n            </SpanStep>\n          ))}\n        </WrapperSpanStep>\n      </QuizStepsBox>\n    </QuizBarInner>\n  );\n};\n","import styled from 'styled-components';\nimport { ButtonOrg } from '../../../CommonStyle/ButtonCommon.styled';\n\nexport const QuizNavInner = styled.div`\n  width: 100%;\n  display: flex;\n  gap: 30px;\n  justify-content: center;\n\n  @media screen and (max-width: 767px) {\n    gap: 15px;\n  }\n`;\n\nexport const QuizNavButton = styled(ButtonOrg)`\n  padding: 14px 28px;\n  font-size: 18px;\n  border: 1px solid\n    ${({ theme, colorBorder }) =>\n      theme.color[colorBorder ? colorBorder : 'second']};\n\n  color: ${({ theme, colorFont }) =>\n    theme.color[colorFont ? colorFont : 'white']};\n\n  :disabled {\n    opacity: 0.8;\n  }\n\n  svg {\n    margin-left: ${({ marginLeft }) => (marginLeft ? marginLeft : '0')};\n    margin-right: ${({ marginRight }) => (marginRight ? marginRight : '0')};\n  }\n\n  :not(:disabled):hover {\n    color: ${({ theme, colorFontHover }) =>\n      theme.color[colorFontHover ? colorFontHover : 'white']};\n\n    svg {\n      stroke: ${({ theme, colorSvgHover }) =>\n        colorSvgHover ? theme.color[colorSvgHover] : theme.color.white};\n\n      fill: ${({ theme, colorSvgHover }) =>\n        colorSvgHover ? theme.color[colorSvgHover] : theme.color.white};\n    }\n  }\n\n  @media screen and (max-width: 767px) {\n    padding: 10px 20px;\n  }\n`;\n","import { QuizNavButton, QuizNavInner } from './QuizNav.styled';\nimport { Icon } from '../../Icon/Icon';\n\nexport const QuizNav = ({\n  answersQuiz,\n  currentQuestion,\n  setCurrentQuestion,\n  sendQuiz,\n  isLoading,\n}) => {\n  const isFillCurrent = answersQuiz[currentQuestion - 1].currentAnswer !== null;\n\n  const handleButton = () => {\n    window.scrollTo(0, 0);\n    if (currentQuestion !== 5) {\n      return setCurrentQuestion(prev => {\n        if (prev === 5) return prev;\n        return prev + 1;\n      });\n    }\n    sendQuiz();\n  };\n\n  return (\n    <QuizNavInner>\n      {currentQuestion !== 1 && (\n        <QuizNavButton\n          type={'button'}\n          colorBg={'transparent'}\n          colorBorder={'g1'}\n          colorSvg={'g1'}\n          colorFont={'g1'}\n          colorBgHover={'g1'}\n          onClick={() => setCurrentQuestion(prev => prev - 1)}\n          marginRight={'10px'}\n        >\n          <Icon name={'icon-arrow-left-long'} /> Назад\n        </QuizNavButton>\n      )}\n      <QuizNavButton\n        type={'button'}\n        colorBgHover={'second'}\n        disabled={!isFillCurrent && !isLoading}\n        onClick={handleButton}\n        marginLeft={'10px'}\n      >\n        {currentQuestion !== 5 ? 'Далі' : 'Надіслати'}\n\n        <Icon\n          name={currentQuestion !== 5 ? 'icon-arrow-right-long' : 'icon-email'}\n        />\n      </QuizNavButton>\n    </QuizNavInner>\n  );\n};\n","import styled from 'styled-components';\n\nexport const QuizBodyInner = styled.div`\n  width: 100%;\n  margin-bottom: 30px;\n`;\n\nexport const CircleCheck = styled.div`\n  width: 64px;\n  height: 64px;\n  border-radius: 50%;\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  background-color: ${({ activeAnswer, theme }) =>\n    !activeAnswer ? theme.color.g400 : theme.color.second};\n  position: absolute;\n  top: -32px;\n  left: 50%;\n  transform: translateX(-50%);\n\n  svg {\n    width: 25px;\n    height: 25px;\n    fill: ${({ theme }) => theme.color.white};\n  }\n\n  @media screen and (max-width: 767px) {\n    top: 50%;\n    transform: translate(0, -50%);\n    left: 0;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ListAnswersOne = styled.ul`\n  display: flex;\n  gap: 30px;\n  padding: 20px 0;\n\n  @media screen and (max-width: 999px) {\n    gap: 15px;\n  }\n\n  @media screen and (max-width: 767px) {\n    flex-direction: column;\n  }\n`;\n\nexport const WrapperAnswerImg = styled.div`\n  border: 2px solid transparent;\n  border-radius: 10px;\n  overflow: hidden;\n  transition: border-color 350ms ease;\n  margin-bottom: 12px;\n\n  @media screen and (max-width: 767px) {\n    width: 100px;\n  }\n`;\n\nexport const AnswerImg = styled.img`\n  user-drag: none;\n`;\n\nexport const AnswerText = styled.p`\n  font-size: 21px;\n  transition: color 350ms ease;\n  line-height: 1.2;\n\n  @media screen and (max-width: 999px) {\n    font-size: 18px;\n  }\n\n  @media screen and (max-width: 767px) {\n    flex: 1;\n    padding-left: 15px;\n    font-size: 21px;\n  }\n`;\n\nexport const ItemAnswerOne = styled.li`\n  position: relative;\n  text-align: center;\n  cursor: pointer;\n  flex: 1;\n\n  ${WrapperAnswerImg} {\n    border-color: ${({ theme, activeAnswer }) =>\n      activeAnswer ? theme.color.second : 'transparent'};\n  }\n\n  ${AnswerText} {\n    color: ${({ theme, activeAnswer }) =>\n      activeAnswer ? theme.color.second : theme.color.g2};\n  }\n\n  :hover {\n    ${WrapperAnswerImg} {\n      border-color: ${({ theme }) => theme.color.second};\n    }\n\n    ${AnswerText} {\n      color: ${({ theme }) => theme.color.second};\n    }\n  }\n\n  @media screen and (max-width: 767px) {\n    display: flex;\n    padding-left: 32px;\n    align-items: center;\n    text-align: left;\n  }\n`;\n","import { CircleCheck, QuizBodyInner } from '../QuizBody.styled';\nimport {\n  AnswerImg,\n  AnswerText,\n  ItemAnswerOne,\n  ListAnswersOne,\n  WrapperAnswerImg,\n} from './QuizBodyOne.styled';\nimport { Icon } from '../../../Icon/Icon';\n\nimport img1_webp_pc from '../../../../img/quiz/quiz-1_pc.webp';\nimport img1_webp_mobile from '../../../../img/quiz/quiz-1_mobile.webp';\nimport img1_jpg_pc from '../../../../img/quiz/quiz-1_pc.jpg';\nimport img1_jpg_mobile from '../../../../img/quiz/quiz-1_mobile.jpg';\nimport img2_webp_pc from '../../../../img/quiz/quiz-2_pc.webp';\nimport img2_webp_mobile from '../../../../img/quiz/quiz-2_mobile.webp';\nimport img2_jpg_pc from '../../../../img/quiz/quiz-2_pc.jpg';\nimport img2_jpg_mobile from '../../../../img/quiz/quiz-2_mobile.jpg';\nimport img3_webp_pc from '../../../../img/quiz/quiz-3_pc.webp';\nimport img3_webp_mobile from '../../../../img/quiz/quiz-3_mobile.webp';\nimport img3_jpg_pc from '../../../../img/quiz/quiz-3_pc.jpg';\nimport img3_jpg_mobile from '../../../../img/quiz/quiz-3_mobile.jpg';\n\nconst arrPhotos = [\n  {\n    id: 1,\n    pc: [img1_webp_pc, img1_jpg_pc],\n    mobile: [img1_webp_mobile, img1_jpg_mobile],\n  },\n  {\n    id: 2,\n    pc: [img2_webp_pc, img2_jpg_pc],\n    mobile: [img2_webp_mobile, img2_jpg_mobile],\n  },\n  {\n    id: 3,\n    pc: [img3_webp_pc, img3_jpg_pc],\n    mobile: [img3_webp_mobile, img3_jpg_mobile],\n  },\n];\n\nexport const QuizBodyOne = ({ answersQuiz, setAnswersQuiz }) => {\n  const choseAnswer = currentAnswer => {\n    setAnswersQuiz(prev => {\n      const state = { ...prev };\n      state[0].currentAnswer = currentAnswer;\n      state[0].currentValue = state[0].answers[currentAnswer];\n      return state;\n    });\n  };\n\n  return (\n    <QuizBodyInner>\n      <ListAnswersOne>\n        {answersQuiz[0].answers.map((item, index) => {\n          return (\n            <ItemAnswerOne\n              key={index}\n              onClick={() => choseAnswer(index)}\n              activeAnswer={answersQuiz[0].currentAnswer === index}\n            >\n              <CircleCheck\n                activeAnswer={answersQuiz[0].currentAnswer === index}\n              >\n                <Icon name={'icon-check-list'} />\n              </CircleCheck>\n              <WrapperAnswerImg>\n                <picture>\n                  <source\n                    media=\"(min-width: 768px)\"\n                    srcSet={arrPhotos[index].pc[0]}\n                    type=\"image/webp\"\n                  />\n                  <source\n                    media=\"(min-width: 768px)\"\n                    srcSet={arrPhotos[index].pc[1]}\n                    type=\"image/jpg\"\n                  />\n                  <source\n                    media=\"(max-width: 767px)\"\n                    srcSet={arrPhotos[index].mobile[0]}\n                    type=\"image/webp\"\n                  />\n                  <source\n                    media=\"(max-width: 767px)\"\n                    srcSet={arrPhotos[index].mobile[1]}\n                    type=\"image/jpg\"\n                  />\n                  <AnswerImg\n                    src={arrPhotos[index].pc[1]}\n                    loading=\"lazy\"\n                    alt={item}\n                    width=\"395\"\n                    height=\"183\"\n                  />\n                </picture>\n              </WrapperAnswerImg>\n              <AnswerText>{item}</AnswerText>\n            </ItemAnswerOne>\n          );\n        })}\n      </ListAnswersOne>\n    </QuizBodyInner>\n  );\n};\n","import styled from 'styled-components';\nimport { AnswerText } from '../QuizBodyOne/QuizBodyOne.styled';\n\nexport const ListAnswersTwo = styled.ul`\n  display: flex;\n  gap: 33px;\n  padding: 30px 0;\n\n  @media screen and (max-width: 1199px) {\n    gap: 15px;\n  }\n\n  @media screen and (max-width: 767px) {\n    flex-direction: column;\n    padding: 10px 0;\n  }\n`;\n\nexport const InnerAnswersTwo = styled.div`\n  width: 100%;\n  height: 100%;\n  border-radius: 10px;\n  transition: border-color 350ms ease;\n  padding: 60px 22px 20px 22px;\n  text-align: center;\n\n  @media screen and (max-width: 999px) {\n    padding-bottom: 20px;\n    padding-top: 45px;\n  }\n\n  @media screen and (max-width: 767px) {\n    padding: 15px 15px 15px 30px;\n    text-align: left;\n    min-height: 84px;\n    display: flex;\n    align-items: center;\n  }\n`;\n\nexport const ItemAnswersTwo = styled.li`\n  position: relative;\n  flex: 1;\n  cursor: pointer;\n\n  ${InnerAnswersTwo} {\n    border: 2px solid\n      ${({ theme, activeAnswer }) =>\n        activeAnswer ? theme.color.second : theme.color.g400};\n  }\n\n  ${InnerAnswersTwo} ${AnswerText} {\n    color: ${({ theme, activeAnswer }) =>\n      activeAnswer ? theme.color.second : theme.color.g2};\n  }\n\n  :hover {\n    border-color: ${({ theme }) => theme.color.second};\n\n    ${AnswerText} {\n      color: ${({ theme }) => theme.color.second};\n    }\n  }\n\n  @media screen and (max-width: 767px) {\n    padding-left: 34px;\n  }\n`;\n","import { CircleCheck, QuizBodyInner } from '../QuizBody.styled';\nimport { AnswerText } from '../QuizBodyOne/QuizBodyOne.styled';\nimport { Icon } from '../../../Icon/Icon';\nimport {\n  InnerAnswersTwo,\n  ItemAnswersTwo,\n  ListAnswersTwo,\n} from './QuizBodyTwo.styled';\n\nexport const QuizBodyTwo = ({ answersQuiz, setAnswersQuiz }) => {\n  const choseAnswer = currentAnswer => {\n    setAnswersQuiz(prev => {\n      const state = { ...prev };\n      state[1].currentAnswer = currentAnswer;\n      state[1].currentValue = state[1].answers[currentAnswer];\n      return state;\n    });\n  };\n\n  return (\n    <QuizBodyInner>\n      <ListAnswersTwo>\n        {answersQuiz[1].answers.map((item, index) => {\n          return (\n            <ItemAnswersTwo\n              key={index}\n              onClick={() => choseAnswer(index)}\n              activeAnswer={answersQuiz[1].currentAnswer === index}\n            >\n              <CircleCheck\n                activeAnswer={answersQuiz[1].currentAnswer === index}\n              >\n                <Icon name={'icon-check-list'} />\n              </CircleCheck>\n              <InnerAnswersTwo>\n                <AnswerText>{item}</AnswerText>\n              </InnerAnswersTwo>\n            </ItemAnswersTwo>\n          );\n        })}\n      </ListAnswersTwo>\n    </QuizBodyInner>\n  );\n};\n","import styled, { css } from 'styled-components';\nimport { Range } from 'react-range';\n\nexport const CustomRange = styled(Range)``;\n\nexport const QuizSliderBox = styled.div`\n  max-width: 700px;\n  //height: 42px;\n  padding: 30px 0;\n  margin: 0 auto 0 auto;\n  position: relative;\n\n  @media screen and (max-width: 767px) {\n    margin-right: 40px;\n    margin-left: 40px;\n  }\n`;\n\nexport const WrapperRenderTrack = styled.div`\n  height: 42px;\n  display: flex;\n  width: 100%;\n`;\n\nexport const RenderTrack = styled.div`\n  height: 10px;\n  width: 100%;\n  border-radius: 10px;\n  align-self: center;\n`;\n\nexport const RenderThumb = styled.div`\n  height: 45px;\n  width: 45px;\n  border-radius: 25px;\n  background-color: #fc7300;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  outline: none;\n  position: relative;\n\n  svg {\n    width: 20px;\n    height: 20px;\n    ${({ theme }) => theme.color.white}\n  }\n`;\n\nexport const QuizOutputSlider = styled.span`\n  position: absolute;\n  display: block;\n  cursor: pointer;\n  left: 50%;\n  width: 100px;\n  transform: translateX(-50%);\n  padding: 5px 15px;\n  font-size: 14px;\n  border-radius: 20px;\n  text-align: center;\n  background-color: ${({ currentBrake, theme }) =>\n    currentBrake ? theme.color.second : '#cbced4'};\n  color: ${({ theme, currentBrake }) =>\n    currentBrake ? theme.color.white : theme.color.g1};\n\n  transition-property: color, background-color;\n  transition-duration: 350ms;\n  transition-timing-function: ease;\n`;\n\nexport const WrapperBrakePoints = styled.ul`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: block;\n  z-index: 1;\n  pointer-events: none;\n`;\n\nexport const BrakePoints = styled.li`\n  position: absolute;\n  cursor: pointer;\n  top: 50%;\n  transform: translateY(-50%);\n  left: ${({ leftPos }) => (leftPos ? `calc(${leftPos} - 14px)` : '0')};\n  width: 28px;\n  height: 28px;\n  border-radius: 50%;\n  background-color: ${({ theme, activeBrake }) =>\n    activeBrake ? theme.color.second : theme.color.white};\n  border: ${({ activeBrake }) => (activeBrake ? 'none' : '7px solid #cbced4')};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  pointer-events: initial;\n\n  svg {\n    width: 20px;\n    height: 20px;\n    display: ${({ activeBrake }) => (activeBrake ? 'block' : 'none')};\n    fill: ${({ theme }) => theme.color.white};\n  }\n\n  :first-child {\n    ${QuizOutputSlider} {\n      width: 90px;\n    }\n  }\n\n  :nth-child(3) {\n    ${QuizOutputSlider} {\n      @media screen and (max-width: 999px) {\n        left: ${({ activeBrake }) => (activeBrake ? '-33px' : '-40px')};\n      }\n    }\n  }\n\n  :nth-child(4) {\n    ${QuizOutputSlider} {\n      @media screen and (max-width: 999px) {\n        left: ${({ activeBrake }) => (activeBrake ? '-33px' : '-40px')};\n      }\n    }\n  }\n\n  :last-child {\n    ${QuizOutputSlider} {\n      width: 140px;\n      @media screen and (max-width: 999px) {\n        left: initial;\n        right: ${({ activeBrake }) => (activeBrake ? '-10px' : '-17px')};\n      }\n    }\n  }\n\n  ${() => css`\n    ${QuizOutputSlider} {\n      bottom: ${({ activeBrake }) => (activeBrake ? '-50px' : '-57px')};\n\n      @media screen and (max-width: 999px) {\n        left: ${({ activeBrake }) => (activeBrake ? '-10px' : '-17px')};\n        transform: translateX(0);\n      }\n    }\n  `}\n`;\n","import { QuizBodyInner } from '../QuizBody.styled';\nimport { getTrackBackground } from 'react-range';\nimport { Icon } from '../../../Icon/Icon';\nimport {\n  BrakePoints,\n  CustomRange,\n  QuizOutputSlider,\n  QuizSliderBox,\n  RenderThumb,\n  RenderTrack,\n  WrapperBrakePoints,\n  WrapperRenderTrack,\n} from './QuizBodyTree.styled';\nimport { OutputSlider } from '../../../CalcStation/CalcStation.styled';\n\nexport const QuizBodyTree = ({ setAnswersQuiz, widthScreen, answersQuiz }) => {\n  const rangeValue = answersQuiz[2].currentAnswer[0];\n  const choseAnswer = currentAnswer => {\n    setAnswersQuiz(prev => {\n      const state = { ...prev };\n      state[2].currentValue = currentAnswer;\n      return state;\n    });\n  };\n\n  const handleRange = values => {\n    setAnswersQuiz(prev => {\n      const state = { ...prev };\n      state[2].currentAnswer = values;\n      return state;\n    });\n  };\n\n  const fixValueRange = () => {\n    setTimeout(() => {\n      if (rangeValue <= 6 && rangeValue > 4) {\n        handleRange([5]);\n        choseAnswer('до 5 кВт');\n      }\n      if (rangeValue <= 15 && rangeValue > 6) {\n        handleRange([10]);\n        choseAnswer('до 10 кВт');\n      }\n      if (rangeValue <= 25 && rangeValue > 15) {\n        handleRange([20]);\n        choseAnswer('до 20 кВт');\n      }\n      if (rangeValue <= 35 && rangeValue > 25) {\n        handleRange([30]);\n        choseAnswer('до 30 кВт');\n      }\n      if (rangeValue <= 40 && rangeValue > 35) {\n        handleRange([40]);\n        choseAnswer('більше 30 кВт');\n      }\n    }, 50);\n  };\n\n  return (\n    <QuizBodyInner>\n      <QuizSliderBox>\n        <CustomRange\n          values={answersQuiz[2].currentAnswer}\n          step={1}\n          min={5}\n          max={40}\n          onFinalChange={fixValueRange}\n          onChange={handleRange}\n          renderTrack={({ props, children }) => (\n            <WrapperRenderTrack\n              style={{\n                ...props.style,\n              }}\n            >\n              <RenderTrack\n                ref={props.ref}\n                onMouseDown={props.onMouseDown}\n                onTouchStart={props.onTouchStart}\n                style={{\n                  background: getTrackBackground({\n                    values: answersQuiz[2].currentAnswer,\n                    colors: ['#FC7300', '#CBCED4'],\n                    min: 5,\n                    max: 40,\n                  }),\n                }}\n              >\n                {children}\n              </RenderTrack>\n            </WrapperRenderTrack>\n          )}\n          renderThumb={({ props }) => (\n            <RenderThumb\n              {...props}\n              style={{\n                ...props.style,\n              }}\n            >\n              <Icon name=\"icon-light-flash\" />\n              {widthScreen < 768 && (\n                <OutputSlider id=\"output\" widthValue={'100px'}>\n                  {answersQuiz[2].currentValue}\n                </OutputSlider>\n              )}\n            </RenderThumb>\n          )}\n        />\n        <WrapperBrakePoints>\n          <BrakePoints\n            leftPos={'0%'}\n            activeBrake={rangeValue >= 5}\n            onClick={() => {\n              handleRange([5]);\n              choseAnswer('до 5 кВт');\n            }}\n          >\n            <Icon name=\"icon-light-flash\" />\n            {widthScreen > 767 && (\n              <QuizOutputSlider currentBrake={rangeValue === 5}>\n                до 5 кВт\n              </QuizOutputSlider>\n            )}\n          </BrakePoints>\n          <BrakePoints\n            leftPos={'14.28%'}\n            activeBrake={rangeValue >= 10}\n            onClick={() => {\n              handleRange([10]);\n              choseAnswer('до 10 кВт');\n            }}\n          >\n            <Icon name=\"icon-light-flash\" />\n            {widthScreen > 767 && (\n              <QuizOutputSlider currentBrake={rangeValue === 10}>\n                до 10 кВт\n              </QuizOutputSlider>\n            )}\n          </BrakePoints>\n          <BrakePoints\n            leftPos={'42.85%'}\n            activeBrake={rangeValue >= 20}\n            onClick={() => {\n              handleRange([20]);\n              choseAnswer('до 20 кВт');\n            }}\n          >\n            <Icon name=\"icon-light-flash\" />\n            {widthScreen > 767 && (\n              <QuizOutputSlider currentBrake={rangeValue === 20}>\n                до 20 кВт\n              </QuizOutputSlider>\n            )}\n          </BrakePoints>\n          <BrakePoints\n            leftPos={'71.42%'}\n            activeBrake={rangeValue >= 30}\n            onClick={() => {\n              handleRange([30]);\n              choseAnswer('до 30 кВт');\n            }}\n          >\n            <Icon name=\"icon-light-flash\" />\n            {widthScreen > 767 && (\n              <QuizOutputSlider currentBrake={rangeValue === 30}>\n                до 30 Квт\n              </QuizOutputSlider>\n            )}\n          </BrakePoints>\n          <BrakePoints\n            leftPos={'100%'}\n            activeBrake={rangeValue >= 40}\n            onClick={() => {\n              handleRange([40]);\n              choseAnswer('більше 30 кВт');\n            }}\n          >\n            <Icon name=\"icon-light-flash\" />\n            {widthScreen > 767 && (\n              <QuizOutputSlider currentBrake={rangeValue === 40}>\n                більше 30 кВт\n              </QuizOutputSlider>\n            )}\n          </BrakePoints>\n        </WrapperBrakePoints>\n      </QuizSliderBox>\n      <br />\n      <br />\n    </QuizBodyInner>\n  );\n};\n","import styled from 'styled-components';\n\nexport const QuizCountryInput = styled.input`\n  font-size: 16px;\n  outline-color: ${({ theme }) => theme.color.g400};\n  border-radius: 5px;\n  padding: 10px;\n  margin-top: 10px;\n\n  @media screen and (max-width: 767px) {\n    margin-left: 15px;\n    width: calc(100% - 20px);\n    margin-top: 0;\n  }\n`;\n","import { CircleCheck, QuizBodyInner } from '../QuizBody.styled';\nimport {\n  InnerAnswersTwo,\n  ItemAnswersTwo,\n  ListAnswersTwo,\n} from '../QuizBodyTwo/QuizBodyTwo.styled';\nimport { Icon } from '../../../Icon/Icon';\nimport { AnswerText } from '../QuizBodyOne/QuizBodyOne.styled';\nimport { QuizCountryInput } from './QuizBodyFour.styled';\n\nexport const QuizBodyFour = ({ setAnswersQuiz, answersQuiz }) => {\n  const handleInput = e => {\n    const { value } = e.target;\n    setAnswersQuiz(prev => {\n      const state = { ...prev };\n      state[3].country = value;\n      return state;\n    });\n  };\n\n  const choseAnswer = currentAnswer => {\n    setAnswersQuiz(prev => {\n      const state = { ...prev };\n      state[3].currentAnswer = currentAnswer;\n      state[3].currentValue = state[3].answers[currentAnswer];\n      return state;\n    });\n  };\n\n  return (\n    <QuizBodyInner>\n      <ListAnswersTwo>\n        {answersQuiz[3].answers.map((item, index) => {\n          return (\n            <ItemAnswersTwo\n              key={index}\n              onClick={() => choseAnswer(index)}\n              activeAnswer={answersQuiz[3].currentAnswer === index}\n            >\n              <CircleCheck\n                activeAnswer={answersQuiz[3].currentAnswer === index}\n              >\n                <Icon name={'icon-check-list'} />\n              </CircleCheck>\n              <InnerAnswersTwo>\n                <AnswerText>{item}</AnswerText>\n                {index === 3 && (\n                  <QuizCountryInput\n                    type={'text'}\n                    value={answersQuiz[3].country}\n                    onChange={handleInput}\n                    placeholder={'Назва вашого міста'}\n                  />\n                )}\n              </InnerAnswersTwo>\n            </ItemAnswersTwo>\n          );\n        })}\n      </ListAnswersTwo>\n    </QuizBodyInner>\n  );\n};\n","import styled from 'styled-components';\n\nexport const WrapperContactsQuiz = styled.div`\n  display: flex;\n  gap: 30px;\n  margin: 0 auto 0 auto;\n  max-width: 800px;\n  padding: 40px 0;\n\n  @media screen and (max-width: 767px) {\n    flex-direction: column;\n    gap: 0;\n    padding: 10px 0 0 0;\n    margin-bottom: -15px;\n  }\n`;\n","import { QuizBodyInner } from '../QuizBody.styled';\nimport { WrapperContactsQuiz } from './QuizBodyFive.styled';\nimport { Input, PhoneInput } from '../../../SendPhone/SendPhone.styled';\n\nexport const QuizBodyFive = ({ setAnswersQuiz, answersQuiz }) => {\n  const handleInputName = e => {\n    const { value } = e.target;\n    setAnswersQuiz(prev => {\n      const state = { ...prev };\n      state[4].firstName = value;\n      return state;\n    });\n  };\n\n  // const handleInputEmail = e => {\n  //   const { value } = e.target;\n  //   setAnswersQuiz(prev => {\n  //     const state = { ...prev };\n  //     state[4].email = value;\n  //     return state;\n  //   });\n  // };\n\n  const handleInputPhone = value => {\n    setAnswersQuiz(prev => {\n      const state = { ...prev };\n      state[4].phone = value;\n      return state;\n    });\n  };\n\n  return (\n    <QuizBodyInner>\n      <WrapperContactsQuiz>\n        <Input\n          type=\"text\"\n          placeholder=\"Ваше ім’я\"\n          value={answersQuiz[4].firstName}\n          pattern=\"[a-zA-Zа-яА-ЯёЁґҐіІїЇєЄ'’\\-]+( [a-zA-Zа-яА-ЯёЁґҐіІїЇєЄ'’\\-]+)*\"\n          name=\"name\"\n          onChange={handleInputName}\n        />\n\n        <PhoneInput\n          type=\"text\"\n          mask=\"+{38}(000)-000-00-00\"\n          definitions={{\n            '#': /[0-9]/,\n          }}\n          placeholder=\"Ваш номер телефону\"\n          name=\"phone\"\n          id=\"phone\"\n          onAccept={handleInputPhone}\n        />\n\n        {/*<Input*/}\n        {/*  type=\"email\"*/}\n        {/*  placeholder=\"Ваш email\"*/}\n        {/*  value={answersQuiz[4].email}*/}\n        {/*  name=\"email\"*/}\n        {/*  onChange={handleInputEmail}*/}\n        {/*/>*/}\n      </WrapperContactsQuiz>\n    </QuizBodyInner>\n  );\n};\n","import styled from 'styled-components';\nimport { TitleQuiz } from '../../../pages/Quiz/Quiz.styled';\n\nexport const QuizStartInner = styled.div`\n  width: 100%;\n  overflow: hidden;\n`;\n\nexport const QuizStartWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  height: 715px;\n\n  @media screen and (max-width: 1199px) {\n    height: 564px;\n  }\n\n  @media screen and (max-width: 767px) {\n    height: auto;\n  }\n`;\n\nexport const QuizStartImgWrapper = styled.div`\n  width: 460px;\n  position: relative;\n\n  @media screen and (max-width: 1199px) {\n    width: 360px;\n  }\n\n  @media screen and (max-width: 767px) {\n    display: none;\n  }\n`;\n\nexport const QuizStartImg = styled.img`\n  position: absolute;\n  top: 0;\n  left: -250px;\n  width: 710px;\n  height: auto;\n\n  @media screen and (max-width: 1199px) {\n    width: 560px;\n    left: -200px;\n  }\n`;\n\nexport const QuizStartIntroWrapper = styled.div`\n  flex: 1;\n  padding-left: 70px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n\n  position: relative;\n\n  @media screen and (max-width: 767px) {\n    padding-left: 0;\n    align-items: center;\n  }\n`;\n\nexport const QuizStartIntroImg = styled.img`\n  position: absolute;\n  left: 370px;\n  top: 57%;\n  transform: translateY(-50%);\n  width: 478px;\n\n  @media screen and (max-width: 1199px) and (min-width: 768px) {\n    display: none;\n  }\n\n  @media screen and (max-width: 767px) {\n    position: initial;\n    max-width: 300px;\n    margin: 0 auto 30px auto;\n    width: 100%;\n    top: initial;\n    transform: translateY(0);\n  }\n`;\n\nexport const QuizStartTitleSpan = styled.span`\n  color: ${({ theme }) => theme.color.second};\n`;\n\nexport const QuizStartIntroTitle = styled(TitleQuiz)`\n  text-align: left;\n\n  @media screen and (max-width: 767px) {\n    text-align: center;\n    font-size: 28px;\n  }\n`;\n\nexport const QuizStartIntroText = styled.p`\n  font-size: 20px;\n  margin-bottom: 50px;\n\n  @media screen and (max-width: 767px) {\n    margin-bottom: 30px;\n    text-align: center;\n    width: 100%;\n  }\n`;\n","import {\n  QuizStartImg,\n  QuizStartImgWrapper,\n  QuizStartInner,\n  QuizStartIntroImg,\n  QuizStartIntroText,\n  QuizStartIntroTitle,\n  QuizStartIntroWrapper,\n  QuizStartTitleSpan,\n  QuizStartWrapper,\n} from './QuizStart.styled';\nimport { Container } from '../../../pages/Common.styled';\n\nimport quiz_start_img from 'img/quiz/quiz-start.webp';\nimport quiz_diagram_img from 'img/quiz/quiz-diagrama.webp';\n\nimport { QuizNavButton } from '../QuizNav/QuizNav.styled';\nimport { Icon } from '../../Icon/Icon';\n\nexport const QuizStart = ({ setIsReady }) => {\n  return (\n    <QuizStartInner>\n      <Container>\n        <QuizStartWrapper>\n          <QuizStartImgWrapper>\n            <QuizStartImg\n              src={quiz_start_img}\n              alt={'Фото панелі та каска'}\n              load={'lazy'}\n            />\n          </QuizStartImgWrapper>\n          <QuizStartIntroWrapper>\n            <QuizStartIntroTitle>\n              Отримайте <QuizStartTitleSpan>безкоштовний</QuizStartTitleSpan>{' '}\n              проект і кошторис <br /> вашої станції\n            </QuizStartIntroTitle>\n            <QuizStartIntroText>\n              Для цього дайте відповідь <br /> лише на 5 питаннь\n            </QuizStartIntroText>\n            <QuizStartIntroImg\n              src={quiz_diagram_img}\n              alt={'Фото діагама'}\n              load={'lazy'}\n            />\n            <QuizNavButton\n              type={'button'}\n              colorBgHover={'second'}\n              marginLeft={'10px'}\n              onClick={() => setIsReady(true)}\n            >\n              Почати розрахунок <Icon name={'icon-arrow-right-long'} />\n            </QuizNavButton>\n          </QuizStartIntroWrapper>\n        </QuizStartWrapper>\n      </Container>\n    </QuizStartInner>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nimport { InnerQuiz, TitleQuiz, WrapperQuiz } from './Quiz.styled';\nimport { QuizBar } from '../../components/QuizParts/QuizBar/QuizBar';\nimport { QuizNav } from '../../components/QuizParts/QuizNav/QuizNav';\nimport { QuizBodyOne } from '../../components/QuizParts/QuizBody/QuizBodyOne/QuizBodyOne';\nimport { QuizBodyTwo } from '../../components/QuizParts/QuizBody/QuizBodyTwo/QuizBodyTwo';\nimport { QuizBodyTree } from '../../components/QuizParts/QuizBody/QuizBodyTree/QuizBodyTree';\nimport { QuizBodyFour } from '../../components/QuizParts/QuizBody/QuizBodyFour/QuizBodyFour';\nimport { QuizBodyFive } from '../../components/QuizParts/QuizBody/QuizBodyFive/QuizBodyFive';\nimport useWindowWidth from '../../services/widthScreen';\nimport { sendQuizToTelegram } from '../../components/API/API';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { useNavigate } from 'react-router-dom';\nimport GoogleAnalyticsWrapper from '../../components/GoogleAnalyticsWrapper/GoogleAnalyticsWrapper';\nimport { QuizStart } from '../../components/QuizParts/QuizStart/QuizStart';\nimport ReactPixel from 'react-facebook-pixel';\n\nconst questions = [\n  {\n    id: 1,\n    name: 'Для чого встановлюється станція?',\n    answers: [\n      'Підприємство (офіс, ТРЦ, готель, ресторан)',\n      'Власний будинок',\n      'Заробіток на зеленому тарифі',\n    ],\n    currentAnswer: null,\n    currentValue: null,\n  },\n  {\n    id: 2,\n    name: 'Яку потребу вирішуємо?',\n    answers: [\n      'Повна незалежність від електромережі',\n      'Компенсація частини споживання',\n      'Резервне живлення',\n      'Пасивний дохід',\n    ],\n    currentAnswer: null,\n    currentValue: null,\n  },\n  {\n    id: 3,\n    name: 'Яка потужність вас цікавить?',\n    answers: [],\n    currentAnswer: [5],\n    currentValue: 'до 5 кВт',\n  },\n  {\n    id: 4,\n    name: 'Вкажіть ваше місто',\n    answers: ['Одеса', 'Миколаїв', 'Область', 'Інше'],\n    currentAnswer: null,\n    currentValue: null,\n    country: '',\n  },\n  {\n    id: 5,\n    name: 'Вкажіть Ім’я та номер телефону',\n    answers: [],\n    currentAnswer: 1,\n    firstName: '',\n    phone: '',\n    email: '',\n  },\n];\n\nconst Quiz = () => {\n  const [currentQuestion, setCurrentQuestion] = useState(1);\n  const [answersQuiz, setAnswersQuiz] = useState(questions);\n  const widthScreen = useWindowWidth();\n  const [isReady, setIsReady] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const sendQuiz = async () => {\n    const forWhat = answersQuiz[0].currentValue;\n    const problem = answersQuiz[1].currentValue;\n    const power = answersQuiz[2].currentValue;\n    const country = answersQuiz[3].currentValue;\n    const whichCountry = answersQuiz[3].country;\n    const name = answersQuiz[4].firstName;\n    const phone = answersQuiz[4].phone;\n    const email = answersQuiz[4].email;\n\n    try {\n      setIsLoading(true);\n\n      await sendQuizToTelegram({\n        forWhat,\n        problem,\n        power,\n        country,\n        whichCountry,\n        name,\n        phone,\n        email,\n      });\n\n      setAnswersQuiz(questions);\n      Notify.success('Відправлено успішно');\n      setIsLoading(false);\n      navigate('/thanks');\n    } catch (error) {\n      setIsLoading(false);\n      Notify.failure('Упс..Сталася помилка :(');\n      if (error.response.data.message)\n        Notify.failure(error.response.data.message);\n    }\n  };\n\n  useEffect(() => {\n    if (process.env.NODE_ENV === 'development') return;\n\n    ReactPixel.init('303919825606274');\n    ReactPixel.pageView();\n  }, []);\n\n  return (\n    <GoogleAnalyticsWrapper>\n      <InnerQuiz>\n        {!isReady ? (\n          <QuizStart setIsReady={setIsReady} />\n        ) : (\n          <WrapperQuiz>\n            <TitleQuiz>Розрахуйте вартість вашої сонячної станції</TitleQuiz>\n            <QuizBar\n              currentQuestion={currentQuestion}\n              nameQuestion={questions[currentQuestion - 1].name}\n              questions={questions}\n            />\n\n            {currentQuestion === 1 && (\n              <QuizBodyOne\n                answersQuiz={answersQuiz}\n                setAnswersQuiz={setAnswersQuiz}\n              />\n            )}\n            {currentQuestion === 2 && (\n              <QuizBodyTwo\n                answersQuiz={answersQuiz}\n                setAnswersQuiz={setAnswersQuiz}\n              />\n            )}\n            {currentQuestion === 3 && (\n              <QuizBodyTree\n                answersQuiz={answersQuiz}\n                setAnswersQuiz={setAnswersQuiz}\n                widthScreen={widthScreen}\n              />\n            )}\n            {currentQuestion === 4 && (\n              <QuizBodyFour\n                answersQuiz={answersQuiz}\n                setAnswersQuiz={setAnswersQuiz}\n              />\n            )}\n            {currentQuestion === 5 && (\n              <QuizBodyFive\n                answersQuiz={answersQuiz}\n                setAnswersQuiz={setAnswersQuiz}\n              />\n            )}\n\n            <QuizNav\n              answersQuiz={answersQuiz}\n              currentQuestion={currentQuestion}\n              setCurrentQuestion={setCurrentQuestion}\n              sendQuiz={sendQuiz}\n              isLoading={isLoading}\n            />\n          </WrapperQuiz>\n        )}\n      </InnerQuiz>\n    </GoogleAnalyticsWrapper>\n  );\n};\nexport default Quiz;\n"],"names":["StationInner","styled","WrapperTitle","WrapperSlider","SubTextSlider","SliderBox","OutputSlider","widthValue","theme","color","second","white","StationImg","ListResult","ItemResult","g500","main","TextResult","CalcInput","ButtonGetCall","ButtonOrg","children","location","useLocation","useEffect","window","gtag","page_path","pathname","InnerQuiz","WrapperQuiz","Container","TitleQuiz","textAlign","QuizBarInner","QuizCurrentBox","QuizStepsBox","NumberQuestion","QuestionName","TitleSpanStep","WrapperSpanStep","SpanStep","g1","current","css","QuizBar","currentQuestion","nameQuestion","questions","map","i","id","QuizNavInner","QuizNavButton","colorBorder","colorFont","marginLeft","marginRight","colorFontHover","colorSvgHover","QuizNav","answersQuiz","setCurrentQuestion","sendQuiz","isLoading","isFillCurrent","currentAnswer","type","colorBg","colorSvg","colorBgHover","onClick","prev","Icon","name","disabled","scrollTo","QuizBodyInner","CircleCheck","activeAnswer","g400","ListAnswersOne","WrapperAnswerImg","AnswerImg","AnswerText","ItemAnswerOne","g2","arrPhotos","pc","img1_webp_pc","img1_jpg_pc","mobile","img1_webp_mobile","img1_jpg_mobile","img2_webp_pc","img2_jpg_pc","img2_webp_mobile","img2_jpg_mobile","img3_webp_pc","img3_webp_mobile","QuizBodyOne","setAnswersQuiz","answers","item","index","state","currentValue","media","srcSet","src","loading","alt","width","height","ListAnswersTwo","InnerAnswersTwo","ItemAnswersTwo","QuizBodyTwo","CustomRange","Range","QuizSliderBox","WrapperRenderTrack","RenderTrack","RenderThumb","QuizOutputSlider","currentBrake","WrapperBrakePoints","BrakePoints","leftPos","activeBrake","QuizBodyTree","widthScreen","rangeValue","choseAnswer","handleRange","values","step","min","max","onFinalChange","setTimeout","onChange","renderTrack","props","style","ref","onMouseDown","onTouchStart","background","getTrackBackground","colors","renderThumb","QuizCountryInput","QuizBodyFour","handleInput","e","value","target","country","placeholder","WrapperContactsQuiz","QuizBodyFive","firstName","pattern","mask","definitions","onAccept","phone","QuizStartInner","QuizStartWrapper","QuizStartImgWrapper","QuizStartImg","QuizStartIntroWrapper","QuizStartIntroImg","QuizStartTitleSpan","QuizStartIntroTitle","QuizStartIntroText","QuizStart","setIsReady","quiz_start_img","load","quiz_diagram_img","email","useState","useWindowWidth","isReady","setIsLoading","navigate","useNavigate","forWhat","problem","power","whichCountry","sendQuizToTelegram","Notify","response","data","message","ReactPixel","GoogleAnalyticsWrapper"],"sourceRoot":""}