{"version":3,"file":"static/js/455.86c96cf9.chunk.js","mappings":"4IAgBA,IAb+B,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SAC1BC,GAAWC,EAAAA,EAAAA,MASjB,OAPAC,EAAAA,EAAAA,YAAU,WAERC,OAAOC,KAAK,SAAU,eAAgB,CACpCC,UAAWL,EAASM,UAEvB,GAAE,CAACN,KAEG,8BAAGD,GACX,C,uTCZYQ,EAAiBC,EAAAA,GAAAA,QAAH,oHAQdC,EAAgBD,EAAAA,GAAAA,GAAH,2JAUbE,EAAmBF,EAAAA,GAAAA,IAAH,8TASlB,qBAAGG,MAAkBC,MAAMC,KAA3B,IAQEC,EAAgBN,EAAAA,GAAAA,GAAH,ojBAOdE,GAoBCK,EAAeP,EAAAA,GAAAA,IAAH,wCAIZQ,EAAeR,EAAAA,GAAAA,GAAH,0FAMZS,EAAcT,EAAAA,GAAAA,KAAH,qaAoBA,qBAAGG,MAASC,MAAoBM,MAAhC,IAIXC,EAAcX,EAAAA,GAAAA,GAAH,+FAMXY,EAAcZ,EAAAA,GAAAA,GAAH,2IASXa,EAASb,EAAAA,GAAAA,OAAH,khBAQG,gBAAGI,EAAH,EAAGA,MAAOD,EAAV,EAAUA,MAAV,OAClBC,EAAQD,EAAMC,MAAMU,KAAO,aADT,IAGhB,gBAAGX,EAAH,EAAGA,MAAH,SAAUC,MAAqBD,EAAMC,MAAMU,KAAOX,EAAMC,MAAMW,UAA9D,IAEK,qBAAGZ,MAAkBC,MAAMC,KAA3B,IASa,qBAAGF,MAAkBC,MAAMW,UAA3B,IACJ,qBAAGZ,MAAkBC,MAAMW,UAA3B,G,qICtIPC,EAAehB,EAAAA,GAAAA,GAAH,6YAKd,gBAAGI,EAAH,EAAGA,MAAOD,EAAV,EAAUA,MAAV,OACPC,EAAQD,EAAMC,MAAMC,MAAQF,EAAMC,MAAMa,KADjC,IAWa,gBAAGb,EAAH,EAAGA,MAAOD,EAAV,EAAUA,MAAV,OAClBC,EAAQD,EAAMC,MAAMC,MAAQF,EAAMC,MAAMM,MADtB,IASXQ,EAAYlB,EAAAA,GAAAA,KAAH,uCACX,qBAAGG,MAASC,MAAoBM,MAAhC,IAGES,EAAenB,EAAAA,GAAAA,EAAH,iMAKd,gBAAGI,EAAH,EAAGA,MAAOD,EAAV,EAAUA,MAAV,OAAuBC,GAAgBD,EAAMC,MAAMa,KAAnD,G,sEClCEG,E,QAAUpB,GAAAA,QAAH,sSAGE,gBAAGG,EAAH,EAAGA,MAAH,SAAUC,MACpBD,EAAMC,MAAMU,KAAOX,EAAMC,MAAMC,KADrB,G,qMCkBTgB,EAAY,WACvB,IACA,GAAwBC,EAAAA,EAAAA,UAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAkCN,EAAAA,EAAAA,WAAS,GAA3C,eAAOO,EAAP,KAAkBC,EAAlB,KACA,GAAoCR,EAAAA,EAAAA,WAAS,GAA7C,eAAOS,EAAP,KAAmBC,EAAnB,KAgCA,OA9BAtC,EAAAA,EAAAA,YAAU,WACR,KAAI6B,EAAO,GAAX,CACAO,GAAa,GACbE,GAAc,GAOd,KAVc,mCAWZC,EAMD,CALC,MAAOC,GACPC,EAAAA,OAAAA,QAAe,8FACfA,EAAAA,OAAAA,QAAA,UAAkBD,IAClBJ,GAAa,GACbE,GAAc,EACf,CAhBmB,CADN,wCAId,uGAC0BI,EAAAA,EAAAA,IAZd,EAY8Bb,GAD1C,gBACUc,EADV,EACUA,MACRX,GAAS,SAAAY,GAAC,wBAAQA,IAAR,OAAcD,GAAd,IACVP,GAAa,GACbE,GAAc,GAJhB,4CAJc,sBAkBf,GAAE,CAACT,KAEJ7B,EAAAA,EAAAA,YAAU,WAAM,wCAEd,yGACsC0C,EAAAA,EAAAA,IA9B1B,GA6BZ,gBACUC,EADV,EACUA,MAAOE,EADjB,EACiBA,WACfb,EAASW,GACTT,EAASW,GAHX,4CAFc,sBACdf,EAAQ,GADM,mCAOdS,EACD,GAAE,KAGD,iCACE,UAAC,KAAD,YACE,SAAC,KAAD,uCADF,kDAGA,SAAC,KAAD,6xBAKA,SAAC,KAAD,UACGR,EAAMe,KAAI,SAAAC,GAAI,OACb,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,IAAG,UAAKC,EAAAA,GAAL,YAAgBF,EAAKG,QACxBC,QAAQ,OACRC,MAAM,MACNC,OAAO,MACPC,IAAKP,EAAKQ,SAEZ,UAAC,KAAD,YACE,SAAC,KAAD,UAAeR,EAAKQ,SACpB,SAAC,KAAD,UAAcR,EAAKS,QACnB,SAAC,KAAD,UACGC,KAAKC,MAAMX,EAAKY,YAAYb,KAAI,SAAAc,GAAS,OACxC,SAAC,KAAD,UAA8BA,GAAZA,EADsB,WAZ5Bb,EAAKc,GADZ,OAqBjB,gBAAKC,MAAO,CAAEV,MAAO,OAAQW,QAAS,OAAQC,eAAgB,UAA9D,SACG/B,EAtEO,EAsES,GAAKA,EAtEd,EAsE8BJ,IACpC,SAAC,IAAD,CACEoC,KAAK,SACLvD,MAAM,OACNwD,SAAU7B,EACV8B,QAAS,kBAAMrC,GAAQ,SAAAsC,GAAK,OAAIA,EAAQ,CAAZ,GAAnB,EAJX,SAMGjC,GACC,SAACkC,EAAA,EAAD,CAAYC,YAAa,OAAQC,SAAU,SAE3C,wFAOb,E,oBC9FD,EAZiB,WACf,OACE,SAACC,EAAA,EAAD,WACE,SAAC,IAAD,WACE,SAAC,IAAD,WACE,SAAC7C,EAAD,SAKT,C","sources":["components/GoogleAnalyticsWrapper/GoogleAnalyticsWrapper.jsx","components/Portfolio/Portfolio.styled.jsx","components/SectionTitle/SectionTitle.styled.jsx","pages/OurServices/OurServices.styled.jsx","components/Portfolio/Projects.jsx","pages/Projects/Projects.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst GoogleAnalyticsWrapper = ({ children }) => {\n  const location = useLocation();\n\n  useEffect(() => {\n    // Отправка события отслеживания страницы Google Analytics при каждом переходе на новую страницу\n    window.gtag('config', 'G-XFN527HLQ5', {\n      page_path: location.pathname,\n    });\n  }, [location]);\n\n  return <>{children}</>;\n};\n\nexport default GoogleAnalyticsWrapper;\n","import styled from 'styled-components';\n\nexport const PortfolioInner = styled.section`\n  padding: 50px 0;\n\n  @media screen and (max-width: 1000px) {\n    padding: 25px 0;\n  }\n`;\n\nexport const PortfolioList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n\n  @media screen and (max-width: 767px) {\n    max-width: 320px;\n    margin: 0 auto;\n  }\n`;\n\nexport const PortfolioOverLay = styled.div`\n  position: absolute;\n  padding: 15px;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  bottom: 0;\n  transform: translateY(120%);\n  transition: transform 350ms ease;\n  color: ${({ theme }) => theme.color.white};\n  background-image: linear-gradient(\n    to bottom,\n    rgba(0, 0, 0, 0),\n    rgba(0, 0, 0, 0.9) 40%\n  );\n`;\n\nexport const PortfolioItem = styled.li`\n  position: relative;\n  border-radius: 20px;\n  overflow: hidden;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n  cursor: pointer;\n\n  &:hover ${PortfolioOverLay} {\n    transform: translateY(0);\n  }\n\n  @media screen and (max-width: 767px) {\n    max-width: 320px;\n    margin: 0 auto calc(30px / 2) auto;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin: calc(30px / 2);\n    flex-basis: calc(100% / 2 - 30px);\n  }\n\n  @media screen and (min-width: 1000px) {\n    margin: calc(30px / 2);\n    flex-basis: calc(100% / 3 - 30px);\n  }\n`;\n\nexport const PortfolioImg = styled.img`\n  width: 100%;\n`;\n\nexport const TitleOverLay = styled.h4`\n  text-align: center;\n  margin-bottom: 5px;\n  font-size: 16px;\n`;\n\nexport const SpanOverLay = styled.span`\n  width: 100%;\n  text-align: right;\n  display: block;\n  font-style: italic;\n  font-size: 16px;\n  position: relative;\n\n  @media screen and (max-width: 1200px) {\n    font-size: 14px;\n  }\n\n  :after {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 0;\n    transform: translateY(-50%);\n    width: calc(100% - 50px);\n    height: 3px;\n    background-color: ${({ theme: { color } }) => color.second};\n  }\n`;\n\nexport const ListOverLay = styled.ul`\n  list-style: initial;\n  margin-left: 15px;\n  margin: 5px 0 0 15px;\n`;\n\nexport const TextOverLay = styled.li`\n  font-size: 16px;\n  margin-bottom: 5px;\n\n  @media screen and (max-width: 1200px) {\n    font-size: 14px;\n  }\n`;\n\nexport const NavBtn = styled.button`\n  font-size: 16px;\n  width: 200px;\n  height: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 10px;\n  background-color: ${({ color, theme }) =>\n    color ? theme.color.main : 'transparent'};\n  border: 2px solid\n    ${({ theme, color }) => (color ? theme.color.main : theme.color.additional)};\n  cursor: pointer;\n  color: ${({ theme }) => theme.color.white};\n  transition-property: background-color, border-color;\n  transition-duration: 350ms;\n  transition-timing-function: ease;\n  margin-top: 15px;\n  font-family: inherit;\n  font-weight: inherit;\n\n  :hover {\n    background-color: ${({ theme }) => theme.color.additional};\n    border-color: ${({ theme }) => theme.color.additional};\n  }\n`;\n","import styled from 'styled-components';\n\nexport const SectionTitle = styled.h2`\n  text-align: center;\n  font-size: 28px;\n  position: relative;\n  margin-bottom: 30px;\n  color: ${({ color, theme }) =>\n    color ? theme.color.white : theme.color.black};\n\n  :after {\n    content: '';\n    position: absolute;\n    bottom: -15px;\n    left: 50%;\n    transform: translateX(-50%);\n    width: 100px;\n    height: 3px;\n    background-color: ${({ color, theme }) =>\n      color ? theme.color.white : theme.color.second};\n  }\n\n  @media screen and (max-width: 768px) {\n    font-size: 20px;\n  }\n`;\n\nexport const TitleSpan = styled.span`\n  color: ${({ theme: { color } }) => color.second};\n`;\n\nexport const SetctionText = styled.p`\n  text-align: center;\n  font-size: 18px;\n  max-width: 850px;\n  margin: 0 auto;\n  color: ${({ color, theme }) => (color ? color : theme.color.black)};\n\n  @media screen and (max-width: 768px) {\n    font-size: 16px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  margin-top: 25px;\n  padding: 25px 0;\n  background-color: ${({ theme, color }) =>\n    color ? theme.color.main : theme.color.white};\n\n  :first-of-type {\n    margin-top: 90px;\n    @media screen and (max-width: 1000px) {\n      margin-top: 80px;\n    }\n    @media screen and (max-width: 768px) {\n      margin-top: 70px;\n    }\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport {\n  PortfolioList,\n  PortfolioItem,\n  PortfolioImg,\n  PortfolioOverLay,\n  TitleOverLay,\n  TextOverLay,\n  ListOverLay,\n  SpanOverLay,\n  NavBtn,\n} from './Portfolio.styled';\n\nimport {\n  SectionTitle,\n  SetctionText,\n  TitleSpan,\n} from 'components/SectionTitle/SectionTitle.styled';\n\nimport { getPosts, baseURL } from 'components/API/API';\nimport { LoadSpiner } from 'components/LoadSpiner/LoadSpiner';\n\nexport const ProjectsC = () => {\n  const limit = 6;\n  const [page, setPage] = useState(1);\n  const [items, setItems] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDisabled, setIsDisabled] = useState(false);\n\n  useEffect(() => {\n    if (page < 2) return;\n    setIsLoading(true);\n    setIsDisabled(true);\n    async function gettingPosts() {\n      const { posts } = await getPosts(limit, page);\n      setItems(i => [...i, ...posts]);\n      setIsLoading(false);\n      setIsDisabled(false);\n    }\n    try {\n      gettingPosts();\n    } catch (error) {\n      Notify.failure('Щось пішло не так...');\n      Notify.failure(`${error}`);\n      setIsLoading(false);\n      setIsDisabled(false);\n    }\n  }, [page]);\n\n  useEffect(() => {\n    setPage(1);\n    async function gettingPosts() {\n      const { posts, totalPosts } = await getPosts(limit);\n      setItems(posts);\n      setTotal(totalPosts);\n    }\n    gettingPosts();\n  }, []);\n\n  return (\n    <>\n      <SectionTitle>\n        <TitleSpan>Наші</TitleSpan> проекти\n      </SectionTitle>\n      <SetctionText>\n        Реалізовані нами проекти в області альтернативної енергетики та\n        енергоефективності, які демонструють нашу компетентність та досвід у\n        даній галузі.\n      </SetctionText>\n      <PortfolioList>\n        {items.map(item => (\n          <PortfolioItem key={item.id}>\n            <PortfolioImg\n              src={`${baseURL}/${item.urlImg}`}\n              loading=\"lazy\"\n              width=\"500\"\n              height=\"400\"\n              alt={item.title}\n            />\n            <PortfolioOverLay>\n              <TitleOverLay>{item.title}</TitleOverLay>\n              <SpanOverLay>{item.year}</SpanOverLay>\n              <ListOverLay>\n                {JSON.parse(item.components).map(component => (\n                  <TextOverLay key={component}>{component}</TextOverLay>\n                ))}\n              </ListOverLay>\n            </PortfolioOverLay>\n          </PortfolioItem>\n        ))}\n      </PortfolioList>\n      <div style={{ width: '100%', display: 'flex', justifyContent: 'center' }}>\n        {total / limit > 1 && total / limit > page && (\n          <NavBtn\n            type=\"button\"\n            color=\"true\"\n            disabled={isDisabled}\n            onClick={() => setPage(state => state + 1)}\n          >\n            {isLoading ? (\n              <LoadSpiner borderColor={'#fff'} barColor={'#fff'} />\n            ) : (\n              'Завантажити ще'\n            )}\n          </NavBtn>\n        )}\n      </div>\n    </>\n  );\n};\n","import { Container } from 'pages/Common.styled';\nimport { ProjectsC } from 'components/Portfolio/Projects';\nimport { Section } from 'pages/OurServices/OurServices.styled';\nimport GoogleAnalyticsWrapper from '../../components/GoogleAnalyticsWrapper/GoogleAnalyticsWrapper';\n\nconst Projects = () => {\n  return (\n    <GoogleAnalyticsWrapper>\n      <Section>\n        <Container>\n          <ProjectsC />\n        </Container>\n      </Section>\n    </GoogleAnalyticsWrapper>\n  );\n};\n\nexport default Projects;\n"],"names":["children","location","useLocation","useEffect","window","gtag","page_path","pathname","PortfolioInner","styled","PortfolioList","PortfolioOverLay","theme","color","white","PortfolioItem","PortfolioImg","TitleOverLay","SpanOverLay","second","ListOverLay","TextOverLay","NavBtn","main","additional","SectionTitle","black","TitleSpan","SetctionText","Section","ProjectsC","useState","page","setPage","items","setItems","total","setTotal","isLoading","setIsLoading","isDisabled","setIsDisabled","gettingPosts","error","Notify","getPosts","posts","i","totalPosts","map","item","src","baseURL","urlImg","loading","width","height","alt","title","year","JSON","parse","components","component","id","style","display","justifyContent","type","disabled","onClick","state","LoadSpiner","borderColor","barColor","GoogleAnalyticsWrapper"],"sourceRoot":""}