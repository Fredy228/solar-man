{"version":3,"file":"static/js/41.ad416e55.chunk.js","mappings":"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","sources":["adminPage/StoreDB/NavStoreDB/NavStoreDB.styled.jsx","adminPage/StoreDB/NavStoreDB/NavStoreDB.jsx","adminPage/StoreDB/ListProduct/ListProduct.styled.jsx","components/ListGoods/ListTableProduct.styled.jsx","adminPage/StoreDB/ListProduct/ListProduct.jsx","adminPage/StoreDB/StoreDB.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Inner = styled.div`\n  width: 100%;\n  margin-top: 20px;\n`;\n\nexport const ListNav = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: ${({ theme }) => theme.color.main};\n  border-radius: 10px;\n  padding: 10px;\n`;\nexport const ItemNav = styled.li`\n  display: flex;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: column;\n  }\n\n  @media screen and (min-width: 1200px) {\n    flex-direction: row;\n  }\n`;\n\nexport const Select = styled.select`\n  width: 170px;\n  height: 25px;\n  border-radius: 10px;\n  text-align: center;\n  color: ${({ theme }) => theme.color.white};\n  background-color: ${({ theme }) => theme.color.additional};\n  font-family: inherit;\n  font-weight: inherit;\n  font-size: 14px;\n  border-color: transparent;\n  cursor: pointer;\n  outline: transparent;\n  transition: border-color 350ms ease;\n\n  :hover,\n  :focus {\n    border-color: ${({ theme }) => theme.color.white};\n  }\n`;\n\nexport const Option = styled.option``;\n\nexport const Text = styled.p`\n  color: ${({ theme }) => theme.color.white};\n  margin-right: 10px;\n  @media screen and (max-width: 1200px) {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 170px;\n  height: 25px;\n  border-radius: 10px;\n  background-color: ${({ theme }) => theme.color.white};\n  cursor: pointer;\n  transition-duration: 350ms;\n  transition-timing-function: ease;\n  transition-property: background-color, color;\n\n  :hover {\n    background-color: ${({ theme }) => theme.color.additional};\n    color: ${({ theme }) => theme.color.white};\n  }\n`;\n","import {\n  Button,\n  Inner,\n  ItemNav,\n  ListNav,\n  Option,\n  Select,\n  Text,\n} from './NavStoreDB.styled';\nimport { useEffect, useState } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n\nexport const NavStoreDB = ({ isLoading }) => {\n  const navigate = useNavigate();\n  const [type, setType] = useState('solution');\n  const [subtype, setSubtype] = useState('all');\n  const [sort, setSort] = useState('none');\n  const [, setSearchParams] = useSearchParams();\n\n  const handleCreate = () => {\n    navigate(`${type}`);\n  };\n  const handleType = e => {\n    setType(e.target.value);\n    setSubtype('Всі');\n    setSearchParams(prevSearchParams => {\n      const newSearchParams = new URLSearchParams(prevSearchParams);\n      newSearchParams.set('type', e.target.value);\n      return newSearchParams;\n    });\n  };\n\n  const handleSubtype = e => {\n    setSort(e.target.value);\n    setSearchParams(prevSearchParams => {\n      const newSearchParams = new URLSearchParams(prevSearchParams);\n      newSearchParams.set('sort', e.target.value);\n      return newSearchParams;\n    });\n  };\n\n  const handleSort = e => {\n    setSubtype(e.target.value);\n    setSearchParams(prevSearchParams => {\n      const newSearchParams = new URLSearchParams(prevSearchParams);\n      newSearchParams.set('subtype', e.target.value);\n      return newSearchParams;\n    });\n  };\n\n  useEffect(() => {\n    setSearchParams({\n      page: '1',\n      type: 'Готові рішення',\n      subtype: 'Всі',\n      sort: 'none',\n    });\n  }, [setSearchParams]);\n\n  return (\n    <Inner>\n      <ListNav>\n        <ItemNav>\n          <Text>Новий товар:</Text>\n          <Button type={'button'} onClick={handleCreate}>\n            + Створити\n          </Button>\n        </ItemNav>\n        <ItemNav>\n          <Text>Тип:</Text>\n          <Select\n            name=\"type\"\n            value={type}\n            onChange={handleType}\n            disabled={isLoading}\n          >\n            <Option value=\"solution\">Готові рішення</Option>\n            <Option value=\"components\">Компоненти</Option>\n          </Select>\n        </ItemNav>\n        <ItemNav>\n          <Text>Підтип:</Text>\n          <Select\n            name=\"subtype\"\n            value={subtype}\n            onChange={handleSubtype}\n            disabled={isLoading}\n          >\n            <Option value=\"Всі\">Всі</Option>\n            {type === 'solution' ? (\n              <>\n                <Option value=\"Зелений тариф\">Зелений тариф</Option>\n                <Option value=\"Автономні станції\">Автономні станції</Option>\n                <Option value=\"Резервне живлення\">Резервне живлення</Option>\n                <Option value=\"Модульні безперебійні системи\">\n                  Модульні безперебійні системи\n                </Option>\n                <Option value=\"Для підприємств\">Для підприємств</Option>\n              </>\n            ) : (\n              <>\n                <Option value=\"Панелі\">Панелі</Option>\n                <Option value=\"Інвентори\">Інвентори</Option>\n                <Option value=\"Акумулятори\">Акумулятори</Option>\n                <Option value=\"Кріплення\">Кріплення</Option>\n                <Option value=\"Комлпектуючі\">Комлпектуючі</Option>\n                <Option value=\"Контролери заряду\">Контролери заряду</Option>\n              </>\n            )}\n          </Select>\n        </ItemNav>\n        <ItemNav>\n          <Text>Сортування:</Text>\n          <Select\n            onChange={handleSort}\n            value={sort}\n            name=\"sort\"\n            disabled={isLoading}\n          >\n            <Option value=\"none\">За замовчуванням</Option>\n            <Option value=\"cost-up\">Від дешевих</Option>\n            <Option value=\"cost-down\">Від дорогих</Option>\n            <Option value=\"power-up\">Від менш потужних</Option>\n            <Option value=\"power-down\">Від більш потужних</Option>\n          </Select>\n        </ItemNav>\n      </ListNav>\n    </Inner>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Inner = styled.div``;\n","import styled from 'styled-components';\n\nexport const ListProduts = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const ItemProduts = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  border-radius: 20px;\n  overflow: hidden;\n  cursor: pointer;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n\n  @media screen and (min-width: 768px) {\n    margin: calc(20px / 2);\n    flex-basis: calc(100% / ${({ flex }) => flex[0]} - 20px);\n  }\n\n  @media screen and (min-width: 1000px) {\n    margin: calc(30px / 2);\n    flex-basis: calc(100% / ${({ flex }) => flex[1]} - 30px);\n  }\n\n  @media screen and (min-width: 1200px) {\n    margin: calc(30px / 2);\n    flex-basis: calc(100% / ${({ flex }) => flex[2]} - 30px);\n  }\n`;\n\nexport const ImgProduts = styled.img`\n  width: 100%;\n  border-radius: 20px;\n  margin-bottom: 10px;\n`;\n\nexport const TitleProduts = styled.a`\n  font-weight: bold;\n  margin-bottom: 15px;\n  padding: 0 10px;\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 1000px) {\n    font-size: 16px;\n  }\n`;\n\nexport const CostProduts = styled.p`\n  color: ${({ theme }) => theme.color.white};\n  padding: 5px 15px;\n  background-color: ${({ theme }) => theme.color.additional};\n  border-radius: 25px;\n  margin-bottom: 15px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1000px) {\n    font-size: 18px;\n  }\n`;\n\nexport const ButtonProduts = styled.button``;\n","import { Inner } from './ListProduct.styled';\nimport {\n  CostProduts,\n  ImgProduts,\n  ItemProduts,\n  ListProduts,\n  TitleProduts,\n} from '../../../components/ListGoods/ListTableProduct.styled';\nimport { baseURL } from '../../../components/API/API';\n\nexport const ListProduct = ({ result }) => {\n  return (\n    <Inner>\n      <ListProduts>\n        {result &&\n          result.map(item => (\n            <ItemProduts key={item.id} flex={['3', '3', '4']}>\n              <ImgProduts src={`${baseURL}/${item.photo}`} alt={item.title} />\n              <TitleProduts>{item.title}</TitleProduts>\n              <CostProduts>{item.cost}$</CostProduts>\n            </ItemProduts>\n          ))}\n      </ListProduts>\n    </Inner>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { NavStoreDB } from './NavStoreDB/NavStoreDB';\nimport { Container } from '../../pages/Common.styled';\nimport { getStoreSets } from '../../components/API/API';\nimport { ListProduct } from './ListProduct/ListProduct';\nimport useWindowWidth from '../../services/widthScreen';\n\nconst StoreDB = () => {\n  const [searchParams] = useSearchParams();\n  const pageParams = searchParams.get('page');\n  const typeParams = searchParams.get('type');\n  const subtypeParams = searchParams.get('subtype');\n  const sortParams = searchParams.get('sort');\n  const [products, setProducts] = useState([]);\n  const width = useWindowWidth();\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchProducts = async () => {\n      setIsLoading(true);\n      const type = typeParams;\n      const page = Number(pageParams);\n      const subtype = subtypeParams;\n      const sort = sortParams;\n\n      console.log(type, page, subtype, sort);\n\n      if (!type || !page || !subtype || !sort) return;\n\n      if (type === 'Готові рішення') {\n        try {\n          const data = await getStoreSets(page, 12, subtype, sort);\n          setProducts(data);\n          console.log(data);\n          setIsLoading(false);\n        } catch (error) {\n          setProducts([]);\n          setIsLoading(false);\n        }\n      }\n      if (type === 'Компоненти') {\n      }\n      setIsLoading(false);\n    };\n\n    fetchProducts().catch(err => console.log(err));\n  }, [pageParams, typeParams, sortParams, subtypeParams]);\n\n  return (\n    <>\n      {width > 769 ? (\n        <Container>\n          <NavStoreDB isLoading={isLoading} />\n          <ListProduct result={products.result} />\n        </Container>\n      ) : (\n        <p style={{ textAlign: 'center', fontSize: '18px', padding: '20px' }}>\n          Ця панель може будти використована на екранах шириною більше ніж 770px\n        </p>\n      )}\n    </>\n  );\n};\n\nexport default StoreDB;\n"],"names":["Inner","styled","ListNav","theme","color","main","ItemNav","Select","white","additional","Option","Text","Button","NavStoreDB","isLoading","navigate","useNavigate","useState","type","setType","subtype","setSubtype","sort","setSort","useSearchParams","setSearchParams","useEffect","page","onClick","name","value","onChange","e","target","prevSearchParams","newSearchParams","URLSearchParams","set","disabled","ListProduts","ItemProduts","flex","ImgProduts","TitleProduts","CostProduts","ListProduct","result","map","item","src","baseURL","photo","alt","title","cost","id","searchParams","pageParams","get","typeParams","subtypeParams","sortParams","products","setProducts","width","useWindowWidth","setIsLoading","fetchProducts","Number","console","log","getStoreSets","data","catch","err","style","textAlign","fontSize","padding"],"sourceRoot":""}